#!/usr/bin/env python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from runtest_dirac import Filter, TestRun

test = TestRun(__file__, sys.argv)

f = Filter()
f.add(from_string  = 'scalar              x-component',
      num_lines     = 3,
      rel_tolerance = 1.0e-5)

test.run(['response_ez_ez_dc.inp'], ['ne_d2h.mol'], args='--get="DFCOEF PAMXVC"')
test.run(['visual_zo_dc.inp'], ['ne_d2h.mol'], f, args='--copy="DFCOEF PAMXVC"')
test.run(['visual_ez_ez_dc.inp'], ['ne_d2h.mol'], f, args='--copy="DFCOEF PAMXVC"')

test.run(['response_bz_bz_dc.inp'], ['ne_d2h.mol'], args='--get="DFCOEF PAMXVC"')
test.run(['visual_bz_bz_dc.inp'], ['ne_d2h.mol'], f, args='--copy="DFCOEF PAMXVC"')

test.run(['response_1z_bz_dc.inp '], ['co_c1.mol'], args='--get="DFCOEF PAMXVC"')
test.run(['visual_1z_bz_dc.inp'], ['co_c1.mol'], f, args='--copy="DFCOEF PAMXVC"')
test.run(['visual_1z_bz_only_para_dc.inp'], ['co_c1.mol'], f, args='--copy="DFCOEF PAMXVC"')

test.run(['response_1z_2z_dc.inp'], ['co_c1.mol'], args='--get="DFCOEF PAMXVC"')
test.run(['visual_1z_2z_dc.inp'], ['co_c1.mol'], f, args='--copy="DFCOEF PAMXVC"')

os.unlink('DFCOEF')
os.unlink('PAMXVC')

sys.exit(test.return_code)
