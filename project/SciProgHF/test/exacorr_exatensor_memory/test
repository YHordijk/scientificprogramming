#!/usr/bin/env python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from runtest_dirac import Filter, TestRun

test = TestRun(__file__, sys.argv)


f = Filter()
f.add(from_string = 'MP2 energy =',
      num_lines   = 1,
      abs_tolerance   = 1.0e-6)
f.add(from_string = 'Final CCSD energy',
      num_lines   = 4,
      abs_tolerance   = 1.0e-6)

#set environment for testing
os.environ["QF_PROCS_PER_NODE"] = "4"
os.environ["QF_CORES_PER_PROCESS"] = "1"
os.environ["QF_MEM_PER_PROCESS"] = "1500"
os.environ["QF_NVMEM_PER_PROCESS"] = "0"
os.environ["QF_HOST_BUFFER_SIZE"] = "1400"
os.environ["OMP_DYNAMIC"] = "false"
os.environ["OMP_NESTED"] = "true"
os.environ["OMP_MAX_ACTIVE_LEVELS"] = "3"
os.environ["OMP_THREAD_LIMIT"] = "256"
os.environ["OMP_WAIT_POLICY"] = "PASSIVE"
os.environ["OMP_STACKSIZE"] = "200M"
os.environ["OMP_PLACES"] = "threads"
os.environ["OMP_PROC_BIND"] = "close,spread,spread"
os.environ["MKL_NUM_THREADS_DEFAULT"] = "1"
os.environ["MKL_DYNAMIC"] = "false"

test.run(['exacorr_exatensor_memory.inp'], ['H2O_nosym.mol'], f)

sys.exit(test.return_code)
