DIRAC pam run in /home/ilias/QCH_Work/qch_softs/dirac_space/svn_operated/openmpi_gfortran_gcc_atlas_ILP64_cdash/adm/trunk/test/cisd_energy
DIRAC master    (pd) starts by allocating             64000000 words (           488 MB) of memory
DIRAC master    (pd) has no limitations in place for the amount of dynamically allocated memory
 
Note: maximum allocatable memory for master+nodes can be set by -aw flag (MW) in pam
 
 ******************************************************************************
 *                                                                            *
 *                                O U T P U T                                 *
 *                                   from                                     *
 *                                                                            *
 *                   @@@@@    @@   @@@@@     @@@@     @@@@@                   *
 *                   @@  @@        @@  @@   @@  @@   @@                       *
 *                   @@  @@   @@   @@@@@    @@@@@@   @@                       *
 *                   @@  @@   @@   @@ @@    @@  @@   @@                       *
 *                   @@@@@    @@   @@  @@   @@  @@    @@@@@                   *
 *                                                                            *
 *                                                                            *
 %}ZS)S?$=$)]S?$%%>SS$%S$ZZ6cHHMHHHHHHHHMHHM&MHbHH6$L/:<S///</:|/:|:/::!:.::--:
 $?S$$%$$$$?%?$(SSS$SSSHMMMMMMMMMMMMMMMMMM6H&6S&SH&&k?6$r~::://///::::::.:::-::
 (%?)Z??$$$(S%$>$)S6HMMMMMMMMMMMMMMMMMMMMMMR6M]&&$6HR$&6(i::::::|i|:::::::-:-::
 $S?$$)$?$%?))?S/]#MMMMMMMMMMMMMMMMMMMMMMMMMMHM1HRH9R&$$$|):?:/://|:/::/:/.::.:
 SS$%%?$%((S)?Z[6MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&HF$$&/)S?<~::!!:::::::/:-:|.
 SS%%%%S$%%%$$MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHHHHHHM>?/S/:/:::`:/://:/::-::
 ?$SSSS?%SS$)MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM/4?:S:/:::/:::/:/:::.::
 S$(S?S$%(?$HMMMMMMMMMMMMMMMMM#&7RH99MMMMMMMMMMMMMMMMMMHHHd$/:::::/::::::-//.:.
 (?SS(%)S&HMMMMMMMMMMMMMMMMM#S|///???$9HHMMMMMMMMMDSZ&1S/?</>?~:///::|/!:/-:-:.
 $S?%?<H(MMMMMMMMMMMMMMMMR?`. :.:`::<>:``?/*?##*)$:/>       `((%://::/:::::/::/
 S$($$)HdMMMMMMMMMMMMMMMP: . `   `  `    `      `-            `Z<:>?::/:::::|:i
 c%%%&HMMMMMMMMMMMMMMMM6:                                      `$%)>%%</>!:::::
 S?%/MMMMMMMMMMMMMMMMMMH-                                        /ZSS>?:?~:;/::
 $SZ?MMMMMMMMMMMMMMMMMH?.                                        \"&((/?//?|:::
 $%$%&MMMMMMMMMMMMMMMMM:.                                          ?%/S:</::/::
 ($?}&HMMMMMMMMMMMMMMMM>:                                          $%%<?/i:|i::
 Z$($&MMMMMMMMMMMMMMMMHk(:.  . -                                   .S/\?\?/!:/:
 (??$<HMMMMMMMMMMMMMMMFk|:   -.-.                                  :%/%/(:/:ii|
 SZ(S?]MMMMMMMMMMMMMMHS?:- -  ::.:                                  |/S:</::?||
 $%)$$(MMMMMMMMMMMMMMR):`:. :.:::`,,/bcokb/_                       :S?%?|~:/:/:
 %$$%$)[[?$?MMMMMMMMMM: :.:-.::::$7?<&7&MMMMMMM#/           _ .. ..:</?:(:/::::
 $$$?Z?HHH~|/MMMMMMMMM/`.-.:.:/:%%%%?dHMMMMMMMMMMH?,-   .,bMMMM6//./i~/~:<:::/:
 $($S$M//::S?ZHMMMMMH/:.`:::.:/%S/&MMHMMMMMMMMRM&><   ,HMMMMMMMF  :::?:///:|:::
 )[$S$S($|_i:#>::*H&?/::.::/:\"://:?>>`:&HMHSMMMM$:`-   MMHMMMMHHT .)i/?////::/
 $$[$$>$}:dHH&$$--?S::-:.:::--/-:``./::>%Zi?)&/?`:.`   `H?$T*\" `  /%?>%:)://ii|
 $&=&/ZS}$RF<:?/-.|%r/:::/:/:`.-.-..|::S//!`\"``          >??:    `SS<S:)!/////|
 Z&]>b[Z(Z?&%:::../S$$:>:::i`.`. `-.`  `                         ,>%%%:>/>/!|:/
 $$&/F&1$c$?>:>?/,>?$$ZS/::/:-: ...                              |S?S)S?<~:::::
 &$&$&$k&>>|?<:<?((/$[/?)i~/:/. - -                              S?:%%%?/:::/::
 =[/Z[[Fp[MMH$>?Z&S$$$/$S///||..-           -.-                  /((S$:%<:///:/
 $&>1MHHMMMM6M9MMMM$Z$}$S%/:::.`.            .:/,,,dcb>/:.       ((SSSS%:)!//i|
 MMMMMMMMMMMR&&RRRHR&&($(?:|i::-             .:%&S&$[&H&``     ../>%;/?>??:<::>
 MMMMMMMMMMMMS/}S$&&H&[$SS//:::.:.   . . .v</Jq1&&D]&M&<,      :/::/?%%)S>?://:
 MMMMMMMMMMMM?}$/$$kMM&&$(%/?//:..`.  .|//1d/`://?*/*/\"` `     .:/(SS$%(S%)):%
 MMMMMMMMMMMM(}$$>&&MMHR#$S%%:?::.:|-.`:;&&b/D/$p=qpv//b/~`   :/~~%%??$=$)Z$S+;
 MMMMMMMMMMMM[|S$$Z1]MMMMD[$?$:>)/::: :/?:``???bD&{b<<-`     .,:/)|SS(}Z/$$?/<S
 MMMMMMMMMMMM||$)&7k&MMMMH9]$$??Z%|!/:i::`  `` .             SS?SS?Z/]1$/&$c/$S
 MMMMMMMMMMMM| -?>[&]HMMMMMMMH1[/7SS(?:/..-` ::/Sc,/_,     _<$?SS%$S/&c&&$&>//<
 MMMMMMMMMMMMR  `$&&&HMM9MMMMMMM&&c$%%:/:/:.:.:/\?\?/\    _MMHk/7S/]dq&1S<&&></
 MMMMMMMMMMMMM?  :&96MHMMMMMMMMMMMHHk[S%(<<:// `         ,MMMMMMM&/Z6H]DkH]1$&&
 MMMMMMMMMMMMMD    99H9HMMMMMMMMMMMMMMMb&%$<:i.:....    .MMMMMMMMM6HHHRH&H&H1SF
 MMMMMMMMMMMMMM|   `?HMMMMMMMMMMMMMMMMMMMHk6k&>$&Z$/?_.bHMMMMMMMMMMM&6HRM9H6]Zk
 MMMMMMMMMMMMMMM/    `TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHMH6RH&R6&
 MMMMMMMMMMMMMMMM    -|?HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFHH6HMD&&
 MMMMMMMMMMMMMMMMk  ..:~?9MMMMMMMMMMMMM#`:MMMMMMMMMMMMMMMMMMMMMMMMMMMMM9MHkR6&F
 MMMMMMMMMMMMMMMMM/  .-!:%$ZHMMMMMMMMMR` dMMMMMMMMMMMMMMMMMMMMMMMMMMMMM9MRMHH9&
 MMMMMMMMMMMMMMMMMML,:.-|::/?&&MMMMMM` .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHRMH&&6
 MMMMMMMMMMMMMMMMMMMc%>/:::i<:SMMMMMMHdMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHHM&969k
 MMMMMMMMMMMMMMMMMMMMSS/$$/(|HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHH&HH&
 MMMMMMMMMMMMMMMMMMMM6S/?/MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMR96H1DR1
 MMMMMMMMMMMMMMMMMMMMM&$MHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHMH691&&
 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&R&9Z
 MMMMMMMMMMMMMMMMMMMMMMMMMRHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&96][6
 MMMMMMMMMMMMMMMMMMMMMMMMp?:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM96HH1][F
 MMMMMMMMMMMMMMMMMMMMMMMM> -HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&1k&$&
 ******************************************************************************
 *                                                                            *
 *         =========================================================          *
 *                     Program for Atomic and Molecular                       *
 *          Direct Iterative Relativistic All-electron Calculations           *
 *         =========================================================          *
 *                                                                            *
 *                      VERSION 10.00  10 October 2010                        *
 *                                                                            *
 ******************************************************************************
 *                                                                            *
 *    Written by:                                                             *
 *                                                                            *
 *    Trond Saue               Université P. Sabatier, Toulouse  France       *
 *    Lucas Visscher           VU University Amsterdam           Netherlands  *
 *    Hans Jørgen Aa. Jensen   University of Southern Denmark    Denmark      *
 *                                                                            *
 *    with new contributions since the DIRAC08 release from:                  *
 *                                                                            *
 *    Radovan Bast             University of Tromsø              Norway       *
 *    Kenneth G. Dyall         Schrodinger, Inc., Portland       USA          *
 *    Ulf Ekström              VU University Amsterdam           Netherlands  *
 *    Ephraim Eliav            University of Tel Aviv            Israel       *
 *    Thomas Enevoldsen        University of Southern Denmark    Denmark      *
 *    Timo Fleig               Université P. Sabatier, Toulouse  France       *
 *    Andre S. P. Gomes        CNRS/Universite Lille 1           France       *
 *    Johan Henriksson         Linkôping University              Sweden       *
 *    Miroslav Ilias           Matej Bel University              Slovakia     *
 *    Christoph R. Jacob       Karlsruhe Institute of Technology Germany      *
 *    Stefan Knecht            CNRS/Université de Strasbourg     France       *
 *    Huliyar Nataraj          BME/Budapest Univ. Tech. & Econ.  Hungary      *
 *    Patrick Norman           Linköping University              Sweden       *
 *    Jeppe Olsen              Aarhus University                 Denmark      *
 *    Markus Pernpointner      University of Heidelberg          Germany      *
 *    Kenneth Ruud             University of Tromsø              Norway       *
 *    Bernd Schimmelpfennig    Forschungszentrum Karlsruhe       Germany      *
 *    Jetze Sikkema            VU University Amsterdam           Netherlands  *
 *    Andreas Thorvaldsen      University of Tromsø              Norway       *
 *    Jørn Thyssen             University of Southern Denmark    Denmark      *
 *    Sebastien Villaume       Linköping University              Sweden       *
 *    Shigeyoshi Yamamoto      Chukyo University                 Japan        *
 *                                                                            *
 *    For the complete list of contributors to the DIRAC code see our         *
 *    website http://dirac.chem.vu.nl                                         *
 *                                                                            *
 *    This is an experimental code. The authors accept no responsibility      *
 *    for the performance of the code or for the correctness of the results.  *
 *                                                                            *
 *    The code (in whole or part) is not to be reproduced for further         *
 *    distribution without the written permission of the authors or           *
 *    their representatives.                                                  *
 *                                                                            *
 *    If results obtained with this code are published, an                    *
 *    appropriate citation would be:                                          *
 *                                                                            *
 *    DIRAC, a relativistic ab initio electronic structure program,           *
 *    Release DIRAC10 (2010),                                                 *
 *    written by T. Saue, L. Visscher, and H. J. Aa. Jensen,                  *
 *    with new contributions from R. Bast, K. G. Dyall, U. Ekström, E. Eliav, *
 *    T. Enevoldsen, T. Fleig, A. S. P. Gomes, J. Henriksson, M. Ilias,       *
 *    Ch. R. Jacob, S. Knecht, H. S. Nataraj, P. Norman, J. Olsen,            *
 *    M. Pernpointner, K. Ruud, B. Schimmelpfennig, J. Sikkema,               *
 *    A. Thorvaldsen, J.  Thyssen, S. Villaume, and S. Yamamoto               *
 *    (see http://dirac.chem.vu.nl).                                          *
 *                                                                            *
 ******************************************************************************


Compilation settings
--------------------

CMAKE_SYSTEM_NAME           : Linux 

ENABLE_EXTERNAL_MATH        : ON 
ENABLE_64BIT_INTEGERS       : ON 
ENABLE_MPI                  : ON 
ENABLE_XCFUN                : ON 
ENABLE_LOCAL_DISKS          :  
NO_SSH_ACCESS_TO_NODES      :  

CMAKE_BUILD_TYPE            : Release 

CMAKE_Fortran_COMPILER      : /home/ilias/bin/openmpi_gfor_gcc_ILP64/bin/mpif90 
FORTRAN_COMPILER_VERSION    : GNU Fortran (Debian 4.4.5-8) 4.4.5 
CMAKE_Fortran_FLAGS         : -g -fcray-pointer -fbacktrace -DVAR_GFORTRAN -fno-range-check -fdefault-integer-8  
CMAKE_Fortran_FLAGS_DEBUG   : -O0 -g 
CMAKE_Fortran_FLAGS_RELEASE : -O3 -funroll-all-loops 

CMAKE_C_COMPILER            : /home/ilias/bin/openmpi_gfor_gcc_ILP64/bin/mpicc 
C_COMPILER_VERSION          : gcc (Debian 4.4.5-8) 4.4.5 
CMAKE_C_FLAGS               :   
CMAKE_C_FLAGS_DEBUG         : -O0 -g3 
CMAKE_C_FLAGS_RELEASE       : -g -O2 -Wno-unused 

BLAS_LIBRARIES              :  
LAPACK_LIBRARIES            :  

SVN_REVISION                : 14258 
GIT_REVISION                :  

Compilation time            : Tue Jun 14 00:15:16 CEST 2011 


Execution time and host
-----------------------

 
     Date and time (Linux)  : Tue Jun 14 15:06:21 2011 
     Host name              :                                         


Contents of the input file
--------------------------

!                                                                                                   
! This test calculates the spin-orbit components of the 2P state of Fluorine,                       
! using a CISD wavefunction.                                                                        
!                                                                                                   
**DIRAC                                                                                             
.TITLE                                                                                              
Fluorine atom.                                                                                      
.WAVE F                                                                                             
.4INDEX                                                                                             
**HAMILTONIAN                                                                                       
#.LVCORR                                                                                            
.BSS                                                                                                
999                                                                                                 
.BLOCKD                                                                                             
.CMPEIG                                                                                             
.PRINT                                                                                              
2                                                                                                   
**WAVE FUNCTIONS                                                                                    
.SCF                                                                                                
.DIRRCI                                                                                             
*SCF                                                                                                
.CLOSED SHELL                                                                                       
4 0                                                                                                 
.OPEN S                                                                                             
1                                                                                                   
5/0,6                                                                                               
**MOLTRA                                                                                            
.SCHEME                                                                                             
4                                                                                                   
.ACTIVE                                                                                             
2..5                                                                                                
1..12                                                                                               
*END OF                                                                                             
                                                                                                    
 &DIRECT  MAXITER=15 &END                                                                           
 &RASORB  NELEC=7, NRAS1=1,1, NRAS2=2*0,3,3, MAXH1=2, MAXE3=2  &END                                 
 &CIROOT IREPNA=' 1Eu', NROOTS=3 &END                                                               
                                                                                                    


Contents of the molecule file
-----------------------------

INTGRL                                                                                              
Fluorine atom                                                                                       
cc-pVTZ basis (a tight p has been added)                                                            
C   1    3  X  Y  Z                                                                                 
        9.    1                                                                                     
F      .0000000000        0.0000000000        0.0000000000                                          
LARGE    3   3   3   1                                                                              
H   5    0    3                                                                                     
      19500.00000000                                                                                
       2923.00000000                                                                                
        664.50000000                                                                                
        187.50000000                                                                                
         60.62000000                                                                                
H   3    0    3                                                                                     
         21.42000000                                                                                
          7.95000000                                                                                
          0.88150000                                                                                
H   2    0    3                                                                                     
          2.25700000                                                                                
          0.30410000                                                                                
H   5    0    3                                                                                     
        250.80000000                                                                                
         43.88000000                                                                                
          9.92600000                                                                                
          2.93000000                                                                                
          0.91320000                                                                                
H   1    0    3                                                                                     
          0.26720000                                                                                
H   2    0    3                                                                                     
          3.10700000                                                                                
          0.85500000                                                                                
H   1    0    3                                                                                     
          1.91700000                                                                                
FINISH                                                                                              
                                                                                                    


    **************************************************************************
    ***************************** Fluorine atom. *****************************
    **************************************************************************

 Jobs in this run:
   * Wave function
   * Transformation to Molecular Spinor basis


    **************************************************************************
    ************************** General DIRAC set-up **************************
    **************************************************************************

   CODATA Recommended Values of the Fundamental Physical Constants: 1998  
                Peter J. Mohr and Barry N. Taylor                         
   Journal of Physical and Chemical Reference Data, Vol. 28, No. 6, 1999  
 * The speed of light :        137.0359998
 * running in two-component mode
 * Direct evaluation of the following two-electron integrals:
   - LL-integrals
 * Spherical transformation embedded in MO-transformation
   for large components
 * Transformation to scalar RKB basis embedded in
   MO-transformation for small components
 * Thresholds for linear dependence:
   Large components:   1.00D-06
   Small components:   1.00D-08
 DFPCMO: IBEIG read in I2 format.
 * General print level   :   0


    *************************************************************************
    ****************** Output from HERMIT input processing ******************
    *************************************************************************



 Settings for FCK3 calculation:
 ------------------------------

Dynamical threshold is not (yet) implemented in DIRAC


    *************************************************************************
    ****************** Output from READIN input processing ******************
    *************************************************************************



  Title Cards
  -----------

  Fluorine atom                                                           
  cc-pVTZ basis (a tight p has been added)                                

  Nuclear Gaussian exponent for atom of charge   9.000 :    5.3546911034D+08


  Symmetry Operations
  -------------------

  Symmetry operations: 3



                          SYMGRP:Point group information
                          ------------------------------

Point group: D2h

   * The point group was generated by:

      Reflection in the yz-plane
      Reflection in the xz-plane
      Reflection in the xy-plane

   * Group multiplication table

        |  E   C2z  C2y  C2x   i   Oxy  Oxz  Oyz
   -----+----------------------------------------
     E  |  E   C2z  C2y  C2x   i   Oxy  Oxz  Oyz
    C2z | C2z   E   C2x  C2y  Oxy   i   Oyz  Oxz
    C2y | C2y  C2x   E   C2z  Oxz  Oyz   i   Oxy
    C2x | C2x  C2y  C2z   E   Oyz  Oxz  Oxy   i 
     i  |  i   Oxy  Oxz  Oyz   E   C2z  C2y  C2x
    Oxy | Oxy   i   Oyz  Oxz  C2z   E   C2x  C2y
    Oxz | Oxz  Oyz   i   Oxy  C2y  C2x   E   C2z
    Oyz | Oyz  Oxz  Oxy   i   C2x  C2y  C2z   E 

   * Character table

        |  E   C2z  C2y  C2x   i   Oxy  Oxz  Oyz
   -----+----------------------------------------
    Ag  |   1    1    1    1    1    1    1    1
    B3u |   1   -1   -1    1   -1    1    1   -1
    B2u |   1   -1    1   -1   -1    1   -1    1
    B1g |   1    1   -1   -1    1    1   -1   -1
    B1u |   1    1   -1   -1   -1   -1    1    1
    B2g |   1   -1    1   -1    1   -1    1   -1
    B3g |   1   -1   -1    1    1   -1   -1    1
    Au  |   1    1    1    1   -1   -1   -1   -1

   * Direct product table

        | Ag   B3u  B2u  B1g  B1u  B2g  B3g  Au 
   -----+----------------------------------------
    Ag  | Ag   B3u  B2u  B1g  B1u  B2g  B3g  Au 
    B3u | B3u  Ag   B1g  B2u  B2g  B1u  Au   B3g
    B2u | B2u  B1g  Ag   B3u  B3g  Au   B1u  B2g
    B1g | B1g  B2u  B3u  Ag   Au   B3g  B2g  B1u
    B1u | B1u  B2g  B3g  Au   Ag   B3u  B2u  B1g
    B2g | B2g  B1u  Au   B3g  B3u  Ag   B1g  B2u
    B3g | B3g  Au   B1u  B2g  B2u  B1g  Ag   B3u
    Au  | Au   B3g  B2g  B1u  B1g  B2u  B3u  Ag 


                            **************************
                            *** Output from DBLGRP ***
                            **************************

   * Two fermion irreps:  E1g  E1u
   * Real group. NZ = 1
   * Direct product decomposition:
          E1g x E1g : Ag  + B1g + B2g + B3g
          E1u x E1g : Au  + B1u + B2u + B3u
          E1u x E1u : Ag  + B1g + B2g + B3g


                                 Spinor structure
                                 ----------------


   * Fermion irrep no.: 1            * Fermion irrep no.: 2

      La  |  Ag (1)  B1g(2)  |                La  |  Au (1)  B1u(2)  |
      Sa  |  Au (1)  B1u(2)  |                Sa  |  Ag (1)  B1g(2)  |
      Lb  |  B2g(3)  B3g(4)  |                Lb  |  B2u(3)  B3u(4)  |
      Sb  |  B2u(3)  B3u(4)  |                Sb  |  B2g(3)  B3g(4)  |


                              Quaternion symmetries
                              ---------------------

    Rep  T(+)
    -----------------------------
    Ag   1
    B3u  k
    B2u  j
    B1g  i
    B1u  i
    B2g  j
    B3g  k
    Au   1


  Atoms and basis sets
  --------------------

  Number of atom types:     1
  Total number of atoms:    1

  label    atoms   charge   prim    cont     basis   
  ----------------------------------------------------------------------
  F           1       9      40      40      L  - [10s8p1d|10s8p1d]                                              
                              0       0      S  - No small component basis functions attached                    
  ----------------------------------------------------------------------
                             40      40      L  - large components
                              0       0      S  - small components
  ----------------------------------------------------------------------
  total:      1       9      40      40

  Cartesian basis used.
  Threshold for integrals (to be written to file):  1.00D-15

  MNF.INP input file (for the AMFI stuff) is ready.
  CAPOUT: preparing the "CAPDIR.inp" file with DIRAC unique order of atomic basis functions. 


  References for the basis sets
  -----------------------------

  Atom type   1
  Basis set typed explicitly in input file                                        


  Cartesian Coordinates
  ---------------------

  Total number of coordinates:  3


   1   F        x      0.0000000000
   2            y      0.0000000000
   3            z      0.0000000000



  Cartesian coordinates xyz format (angstrom)
  -------------------------------------------

    1

F      0.0000000000   0.0000000000   0.0000000000


  Symmetry Coordinates
  --------------------

  Number of coordinates in each symmetry:   0  1  1  0  1  0  0  0


  Symmetry 2

   1   F     x    1


  Symmetry 3

   2   F     y    2


  Symmetry 5

   3   F     z    3
  Nuclear repulsion energy :    0.000000000000


                                GETLAB: AO-labels
                                -----------------

   * Large components:   10
     1  L F   1 s        2  L F   1 px       3  L F   1 py       4  L F   1 pz       5  L F   1 dxx      6  L F   1 dxy 
     7  L F   1 dxz      8  L F   1 dyy      9  L F   1 dyz     10  L F   1 dzz 
   * Small components:    0



                                GETLAB: SO-labels
                                -----------------

   * Large components:   10
     1  L Ag F  s        2  L Ag F  dxx      3  L Ag F  dyy      4  L Ag F  dzz      5  L B3uF  px       6  L B2uF  py  
     7  L B1gF  dxy      8  L B1uF  pz       9  L B2gF  dxz     10  L B3gF  dyz 
   * Small components:    0



  Symmetry Orbitals
  -----------------

  Number of orbitals in each symmetry:           13     8     8     1     8     1     1     0
  Number of large orbitals in each symmetry:     13     8     8     1     8     1     1     0
  Number of small orbitals in each symmetry:      0     0     0     0     0     0     0     0

* Large component functions

  Symmetry  Ag ( 1)

       10 functions:    F  s   
        1 functions:    F  dxx 
        1 functions:    F  dyy 
        1 functions:    F  dzz 

  Symmetry  B3u( 2)

        8 functions:    F  px  

  Symmetry  B2u( 3)

        8 functions:    F  py  

  Symmetry  B1g( 4)

        1 functions:    F  dxy 

  Symmetry  B1u( 5)

        8 functions:    F  pz  

  Symmetry  B2g( 6)

        1 functions:    F  dxz 

  Symmetry  B3g( 7)

        1 functions:    F  dyz 


   ***************************************************************************
   *************************** Hamiltonian defined ***************************
   ***************************************************************************

 * Print level:    2
 * Barysz-Sadlej-Snijders Hamiltonian. Type code:  999
   Reference: 
    H. J. Aa. Jensen and M. Ilias,
    "Two-component relativistic methods based on the quaternion modified Dirac equation. I:
     from Douglas-Kroll-Hess second order method to the infinite order two-component method.",
     J. Chem. Phys., in preparation.
 * running in two-component mode
 * Default integral flags passed to all modules
   - LL-integrals:     1
   - LS-integrals:     0
   - SS-integrals:     0
   - GT-integrals:     0
 * Comparing eigenvalues between parent 4c and derived 2c one-electron Hamiltonians.
 * Basis set:
   - uncontracted large component basis set


    **************************************************************************
    ************************** Wave function module **************************
    **************************************************************************

 Jobs in this run (in execution order):
 * Hartree-Fock calculation
 * Run DIRRCI CI code
===========================================================================
 SCFINP: Set-up for Hartree-Fock calculation:
===========================================================================
 * Number of fermion irreps: 2
 * Open shell SCF calculation using Average-of-Configuration

 * Shell specifications:

                                        Orbitals
                        #electrons  irrep 1  irrep 2     f        a      alpha
                        ----------  -------  -------  -------  -------  -------
   Closed shell            4             2        0    1.0000   1.0000   0.0000
   Open shell no. 1        5.00          0        3    0.8333   0.9600   0.2400
   ----------------------------------------------------------------------------
   Total                   9.00          2        3

   f is the fraction occupation; a and alpha open shell coupling coefficients.

 * Bare nucleus screening correction used for start guess
 * General print level   :   0
 ***** TRIAL FUNCTION *****
 * Trial vectors read from file DFCOEF
 ***** CONVERGENCE CRITERIA *****
 * Convergence on norm of error vector (gradient).
   Desired convergence:1.000D-07
   Allowed convergence:1.000D-06

 ***** CONVERGENCE CONTROL *****
 * Fock matrix constructed using differential density matrix
    with optimal parameter.
 * DIIS (in MO basis)
 * DIIS will be activated when convergence reaches : 1.00D+20
   - Maximum size of B-matrix:   10
 * Damping of Fock matrix when DIIS is not activated. 
   Weight of old matrix    : 0.250
 * Maximum number of SCF iterations  :   50
 * No quadratic convergent Hartree-Fock
 * Contributions from 2-electron integrals to Fock matrix:
   LL-integrals.
 * NB!!! No e-p rotations in 2nd order optimization.
 ***** OUTPUT CONTROL *****
 * Only electron eigenvalues written out.



===========================================================================
 TRAINP: Set-up for index transformation
===========================================================================

 * General print level   :   0
 * Electronic orbitals only.
 * Total active space.
    Fermion ircop:E1g
    2..5                                                                    
    Fermion ircop:E1u
    1..12                                                                   

 * Set-up for 2-index transformation
 * LS Integrals not included in core Fock-matrix
 * SS Integrals not included in core Fock-matrix
 * Active spaces:
    Fermion ircop:E1g
    - Index  1:  2..5                                                                    
    - Index  2:  2..5                                                                    
    Fermion ircop:E1u
    - Index  1:  1..12                                                                   
    - Index  2:  1..12                                                                   

 * Set-up for 4-index transformation
 * Following scheme      :   4
 - write (rs)-batches of half-transformed integrals 
 (ij|rs) to disk; parallel scheme
 * Screening threshold :1.00E-14
 * MO integral threshold :1.00E-14
 * LS Integrals not transformed.
 * SS Integrals not transformed.
 * Gaunt Integrals not transformed.
 * 4-index transformed integrals written to file.
 * Active spaces:
    Fermion ircop:E1g
    - Index  1:  2..5                                                                    
    - Index  2:  2..5                                                                    
    - Index  3:  2..5                                                                    
    - Index  4:  2..5                                                                    
    Fermion ircop:E1u
    - Index  1:  1..12                                                                   
    - Index  2:  1..12                                                                   
    - Index  3:  1..12                                                                   
    - Index  4:  1..12                                                                   


 ********************************************************************************
 *************************** Input consistency checks ***************************
 ********************************************************************************



    *************************************************************************
    ************************ End of input processing ************************
    *************************************************************************


  Nuclear Gaussian exponent for atom of charge   9.000 :    5.3546911034D+08


                      Nuclear contribution to dipole moments
                      --------------------------------------

                     All components zero by symmetry


                       Generating Lowdin canonical matrix:
                       -----------------------------------

       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.1D-02
   L   Ag    * Deleted:          1(Proj:          1, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B1g   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B2g   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B3g   * Deleted:          0(Proj:          0, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.6D-03
   S   B3u   * Deleted:          1(Proj:          1, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.6D-03
   S   B2u   * Deleted:          1(Proj:          1, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.6D-03
   S   B1u   * Deleted:          1(Proj:          1, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   S   Au    * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B3u   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B2u   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B1u   * Deleted:          0(Proj:          0, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.3D-05
   S   Ag    * Deleted:          8(Proj:          8, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.1D-04
   S   B1g   * Deleted:          0(Proj:          0, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.1D-04
   S   B2g   * Deleted:          0(Proj:          0, Lindep:          0)
  RKBCA1: warning, ARGSQRT=-.100000D+01
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.1D-04
   S   B3g   * Deleted:          0(Proj:          0, Lindep:          0)


                           *** Output from MAKE_BSS ***
                           ----------------------------



                  *** Output from the EXTR_BSS_INFO routine ***
                  ---------------------------------------------

  * Transforming the one-electron DIRAC bare nucleus operator.
  * Order of the Douglas-Kroll-Hess/BSS transformation :...infinite  !
  * Applied the preliminary free-particle ("k") basis transformation (two-step method). 
  * The block diagonalization method (QJACOBI) applied !
  * spin-orbit terms are included
  * AMFI contribution is NOT included.
  * Prepare the picture-change transformation matrixes
  * I2COFK parameter for H2c specification set to:1

  MAKE_BSS: 4c Lowdin AO to MO transf. matrix is  written to the BSSMAT file.


                                Output from MODHAM
                                ------------------

* Applied strict kinetic balance !

  HANDLE_RKB: RKB transf. matrix (TMAT, basic) has been written to the BSSMAT file.

  HANDLE_RKB: BSSMAT file -  EOFLABEL added.

  GET_A_FAC: Average differences for A-factors (fsym 1/2) : 0.13337479D-13

  GET_A_FAC: Average differences for A-factors (fsym 2/2) : 0.82030216D-12


           QJACOBI, selective diagonalization of the quaternion matrix.
           ------------------------------------------------------------

  size of the square hermitian/real symmetric matrix, N=   30
  type of matrix {real(NZ=1), complex(NZ=2) or quaternion(NZ=4)}, NZ= 1
  PRINT level:    2
 QJACOBI(TESTBLOCKS): # of subblocks=                    1
                    1 . block; left upper point                    1                   16  right bottom point:                   15                   30


  QJACOBI(TESTBLOCKS): The off-elements (indexes) to be diagonalized (zeroed) are OK:
  The file #33 with name:QJACO.MTX has been open.
  ...entering matrix has been written to the file QJACO.MTX
  >>>> QJACOBI finished, # of iterations:     468
  last 2 sums of largets elements:  0.93852D-12 0.10214D-11
  "zero" off-diag elem. threshold:  0.10000D-11
  >>>> CPU/wall  time used in QJACOBI: 0.00800002s/ 0.00000000s
  The auxiliary file (lu=#,33) was closed, checking of A=P.Ad.P^H done


           QJACOBI, selective diagonalization of the quaternion matrix.
           ------------------------------------------------------------

  size of the square hermitian/real symmetric matrix, N=   48
  type of matrix {real(NZ=1), complex(NZ=2) or quaternion(NZ=4)}, NZ= 1
  PRINT level:    2
 QJACOBI(TESTBLOCKS): # of subblocks=                    1
                    1 . block; left upper point                    1                   25  right bottom point:                   24                   48


  QJACOBI(TESTBLOCKS): The off-elements (indexes) to be diagonalized (zeroed) are OK:
  The file #33 with name:QJACO.MTX has been open.
  ...entering matrix has been written to the file QJACO.MTX
  >>>> QJACOBI finished, # of iterations:    1870
  last 2 sums of largets elements:  0.89373D-12 0.10143D-11
  "zero" off-diag elem. threshold:  0.10000D-11
  >>>> CPU/wall  time used in QJACOBI: 0.02400196s/ 0.00000000s
 WARNING ! reconstr.  A(                    8 ,                    5 )_r =   7.1904750318203678     
 >>>>> entering elem. A(                    8 ,                    5 )_r =   7.1904750330129446     
  difference is (in abs):  1.19257670405659155E-009
 WARNING ! reconstr.  A(                    8 ,                    7 )_r =  -6.4401858928267721     
 >>>>> entering elem. A(                    8 ,                    7 )_r =  -6.4401858897645070     
  difference is (in abs):  3.06226510815577058E-009
 WARNING ! reconstr.  A(                    9 ,                    8 )_r =  -6.4401858912287926     
 >>>>> entering elem. A(                    9 ,                    8 )_r =  -6.4401858929340960     
  difference is (in abs):  1.70530345400266015E-009
 WARNING ! reconstr.  A(                   10 ,                    4 )_r =   3.6368543474613975     
 >>>>> entering elem. A(                   10 ,                    4 )_r =   3.6368543458881959     
  difference is (in abs):  1.57320156901619157E-009
 WARNING ! reconstr.  A(                   10 ,                    5 )_r =   5.2529868117526393     
 >>>>> entering elem. A(                   10 ,                    5 )_r =   5.2529868098073393     
  difference is (in abs):  1.94529992114667039E-009
 WARNING ! reconstr.  A(                   10 ,                    6 )_r =   3.6368543488360974     
 >>>>> entering elem. A(                   10 ,                    6 )_r =   3.6368543500782380     
  difference is (in abs):  1.24214061258953734E-009
 WARNING ! reconstr.  A(                   10 ,                    7 )_r =  -7.0616821556286533     
 >>>>> entering elem. A(                   10 ,                    7 )_r =  -7.0616821660576079     
  difference is (in abs):  1.04289545888036628E-008
 WARNING ! reconstr.  A(                   10 ,                    8 )_r =  -3.6407294514392534     
 >>>>> entering elem. A(                   10 ,                    8 )_r =  -3.6407294494260896     
  difference is (in abs):  2.01316385783911755E-009
 WARNING ! reconstr.  A(                   10 ,                    9 )_r =  -3.6407294437449300     
 >>>>> entering elem. A(                   10 ,                    9 )_r =  -3.6407294420830567     
  difference is (in abs):  1.66187330563616342E-009
 WARNING ! reconstr.  A(                   11 ,                    4 )_r =   5.2529868099686636     
 >>>>> entering elem. A(                   11 ,                    4 )_r =   5.2529868087807472     
  difference is (in abs):  1.18791643188842500E-009
 WARNING ! reconstr.  A(                   11 ,                    6 )_r =   3.6368543453418187     
 >>>>> entering elem. A(                   11 ,                    6 )_r =   3.6368543476704644     
  difference is (in abs):  2.32864572069502174E-009
 WARNING ! reconstr.  A(                   11 ,                    7 )_r =  -3.6407294560194678     
 >>>>> entering elem. A(                   11 ,                    7 )_r =  -3.6407294530611125     
  difference is (in abs):  2.95835533847821353E-009
 WARNING ! reconstr.  A(                   11 ,                    8 )_r =  -7.0616821537114403     
 >>>>> entering elem. A(                   11 ,                    8 )_r =  -7.0616821549704127     
  difference is (in abs):  1.25897248182127441E-009
 WARNING ! reconstr.  A(                   11 ,                    9 )_r =  -3.6407294558848649     
 >>>>> entering elem. A(                   11 ,                    9 )_r =  -3.6407294543078024     
  difference is (in abs):  1.57706248060662801E-009
 WARNING ! reconstr.  A(                   11 ,                   10 )_r =  -3.2472679364545911     
 >>>>> entering elem. A(                   11 ,                   10 )_r =  -3.2472679463025997     
  difference is (in abs):  9.84800863079726696E-009
 WARNING ! reconstr.  A(                   12 ,                    6 )_r =   5.2529868108808806     
 >>>>> entering elem. A(                   12 ,                    6 )_r =   5.2529868128748376     
  difference is (in abs):  1.99395699951310235E-009
 WARNING ! reconstr.  A(                   12 ,                    7 )_r =  -3.6407294567288764     
 >>>>> entering elem. A(                   12 ,                    7 )_r =  -3.6407294499138061     
  difference is (in abs):  6.81507028588157482E-009
 WARNING ! reconstr.  A(                   12 ,                    8 )_r =  -3.6407294652708511     
 >>>>> entering elem. A(                   12 ,                    8 )_r =  -3.6407294589100729     
  difference is (in abs):  6.36077812643520701E-009
 WARNING ! reconstr.  A(                   12 ,                    9 )_r =  -7.0616821567527923     
 >>>>> entering elem. A(                   12 ,                    9 )_r =  -7.0616821464298027     
  difference is (in abs):  1.03229895742629196E-008
 WARNING ! reconstr.  A(                   12 ,                   10 )_r =  -3.2472679544443941     
 >>>>> entering elem. A(                   12 ,                   10 )_r =  -3.2472679667407647     
  difference is (in abs):  1.22963705884160390E-008
 WARNING ! reconstr.  A(                   12 ,                   11 )_r =  -3.2472679383899945     
 >>>>> entering elem. A(                   12 ,                   11 )_r =  -3.2472679435413738     
  difference is (in abs):  5.15137932310949509E-009
 WARNING ! reconstr.  A(                   13 ,                    6 )_r =  -2.1744300343270861     
 >>>>> entering elem. A(                   13 ,                    6 )_r =  -2.1744300328106192     
  difference is (in abs):  1.51646695201179682E-009
 WARNING ! reconstr.  A(                   13 ,                    7 )_r =   4.0205467157502364     
 >>>>> entering elem. A(                   13 ,                    7 )_r =   4.0205467101513932     
  difference is (in abs):  5.59884316686520833E-009
 WARNING ! reconstr.  A(                   13 ,                    9 )_r =   2.4156236374401474     
 >>>>> entering elem. A(                   13 ,                    9 )_r =   2.4156236428354987     
  difference is (in abs):  5.39535127686008309E-009
 WARNING ! reconstr.  A(                   13 ,                   10 )_r =   4.8840599990653626     
 >>>>> entering elem. A(                   13 ,                   10 )_r =   4.8840599894174375     
  difference is (in abs):  9.64792512547774095E-009
 WARNING ! reconstr.  A(                   13 ,                   11 )_r =   2.3259582280588793     
 >>>>> entering elem. A(                   13 ,                   11 )_r =   2.3259582368191332     
  difference is (in abs):  8.76025385565526449E-009
 WARNING ! reconstr.  A(                   13 ,                   12 )_r =   2.3259582367609246     
 >>>>> entering elem. A(                   13 ,                   12 )_r =   2.3259582395621692     
  difference is (in abs):  2.80124456963903867E-009
 WARNING ! reconstr.  A(                   14 ,                    6 )_r =  -2.1744300375185035     
 >>>>> entering elem. A(                   14 ,                    6 )_r =  -2.1744300360368811     
  difference is (in abs):  1.48162238033933136E-009
 WARNING ! reconstr.  A(                   14 ,                    7 )_r =   2.4156236371927657     
 >>>>> entering elem. A(                   14 ,                    7 )_r =   2.4156236382464158     
  difference is (in abs):  1.05365005609314721E-009
 WARNING ! reconstr.  A(                   14 ,                    9 )_r =   2.4156236387061654     
 >>>>> entering elem. A(                   14 ,                    9 )_r =   2.4156236401279330     
  difference is (in abs):  1.42176759254653007E-009
 WARNING ! reconstr.  A(                   14 ,                   10 )_r =   2.3259582349273833     
 >>>>> entering elem. A(                   14 ,                   10 )_r =   2.3259582298705936     
  difference is (in abs):  5.05678965367906130E-009
 WARNING ! reconstr.  A(                   14 ,                   11 )_r =   4.8840600034454891     
 >>>>> entering elem. A(                   14 ,                   11 )_r =   4.8840600022085709     
  difference is (in abs):  1.23691812348170060E-009
 WARNING ! reconstr.  A(                   14 ,                   12 )_r =   2.3259582446480618     
 >>>>> entering elem. A(                   14 ,                   12 )_r =   2.3259582482969563     
  difference is (in abs):  3.64889451986982749E-009
 WARNING ! reconstr.  A(                   14 ,                   13 )_r =  -2.3614202495809868     
 >>>>> entering elem. A(                   14 ,                   13 )_r =  -2.3614202561584534     
  difference is (in abs):  6.57746657140023672E-009
 WARNING ! reconstr.  A(                   15 ,                    6 )_r =  -1.8199670882713672     
 >>>>> entering elem. A(                   15 ,                    6 )_r =  -1.8199670869339570     
  difference is (in abs):  1.33741018260025157E-009
 WARNING ! reconstr.  A(                   15 ,                    7 )_r =   2.4156236195267402     
 >>>>> entering elem. A(                   15 ,                    7 )_r =   2.4156236222656844     
  difference is (in abs):  2.73894418256759309E-009
 WARNING ! reconstr.  A(                   15 ,                    8 )_r =   2.4156236181006534     
 >>>>> entering elem. A(                   15 ,                    8 )_r =   2.4156236170676948     
  difference is (in abs):  1.03295860753860325E-009
 WARNING ! reconstr.  A(                   15 ,                    9 )_r =   4.0205467042687815     
 >>>>> entering elem. A(                   15 ,                    9 )_r =   4.0205467129212593     
  difference is (in abs):  8.65247784531675279E-009
 WARNING ! reconstr.  A(                   15 ,                   10 )_r =   2.3259582229220563     
 >>>>> entering elem. A(                   15 ,                   10 )_r =   2.3259582139944541     
  difference is (in abs):  8.92760221304911283E-009
 WARNING ! reconstr.  A(                   15 ,                   11 )_r =   2.3259582268656223     
 >>>>> entering elem. A(                   15 ,                   11 )_r =   2.3259582298269379     
  difference is (in abs):  2.96131563715107404E-009
 WARNING ! reconstr.  A(                   15 ,                   12 )_r =   4.8840599730028798     
 >>>>> entering elem. A(                   15 ,                   12 )_r =   4.8840599704853958     
  difference is (in abs):  2.51748399904272446E-009
 WARNING ! reconstr.  A(                   15 ,                   13 )_r =  -2.3614202237804411     
 >>>>> entering elem. A(                   15 ,                   13 )_r =  -2.3614202314638533     
  difference is (in abs):  7.68341212875611745E-009
 WARNING ! reconstr.  A(                   15 ,                   14 )_r =  -2.3614202312746784     
 >>>>> entering elem. A(                   15 ,                   14 )_r =  -2.3614202356329770     
  difference is (in abs):  4.35829861089587212E-009
 WARNING ! reconstr.  A(                   16 ,                    5 )_r =   1.8612919395654892     
 >>>>> entering elem. A(                   16 ,                    5 )_r =   1.8612919378924744     
  difference is (in abs):  1.67301483777748672E-009
 WARNING ! reconstr.  A(                   16 ,                    7 )_r =  -1.1134257872399751     
 >>>>> entering elem. A(                   16 ,                    7 )_r =  -1.1134258001139870     
  difference is (in abs):  1.28740118565673356E-008
 WARNING ! reconstr.  A(                   16 ,                    8 )_r =  -1.3743190337409037     
 >>>>> entering elem. A(                   16 ,                    8 )_r =  -1.3743190361399229     
  difference is (in abs):  2.39901920551233161E-009
 WARNING ! reconstr.  A(                   16 ,                    9 )_r =  -1.3743190381210302     
 >>>>> entering elem. A(                   16 ,                    9 )_r =  -1.3743190330250172     
  difference is (in abs):  5.09601294496064838E-009
 WARNING ! reconstr.  A(                   16 ,                   10 )_r =  -2.4066454150888594     
 >>>>> entering elem. A(                   16 ,                   10 )_r =  -2.4066454096973757     
  difference is (in abs):  5.39148370393149889E-009
 WARNING ! reconstr.  A(                   16 ,                   11 )_r =  -1.4690134226693754     
 >>>>> entering elem. A(                   16 ,                   11 )_r =  -1.4690134131251398     
  difference is (in abs):  9.54423562404826953E-009
 WARNING ! reconstr.  A(                   16 ,                   13 )_r =   3.4705109465867277     
 >>>>> entering elem. A(                   16 ,                   13 )_r =   3.4705109563801670     
  difference is (in abs):  9.79343939278010112E-009
 WARNING ! reconstr.  A(                   16 ,                   14 )_r =   1.6853558497678005     
 >>>>> entering elem. A(                   16 ,                   14 )_r =   1.6853558538314246     
  difference is (in abs):  4.06362410387828277E-009
 WARNING ! reconstr.  A(                   16 ,                   15 )_r =   1.6853558472939769     
 >>>>> entering elem. A(                   16 ,                   15 )_r =   1.6853558625152800     
  difference is (in abs):  1.52213031068271221E-008
 WARNING ! reconstr.  A(                   17 ,                    7 )_r =  -1.3743190489039989     
 >>>>> entering elem. A(                   17 ,                    7 )_r =  -1.3743190501234039     
  difference is (in abs):  1.21940502140205353E-009
 WARNING ! reconstr.  A(                   17 ,                    8 )_r =  -1.3743190468521791     
 >>>>> entering elem. A(                   17 ,                    8 )_r =  -1.3743190496388706     
  difference is (in abs):  2.78669154418764720E-009
 WARNING ! reconstr.  A(                   17 ,                    9 )_r =  -1.1134258225938538     
 >>>>> entering elem. A(                   17 ,                    9 )_r =  -1.1134258171800866     
  difference is (in abs):  5.41376721230335534E-009
 WARNING ! reconstr.  A(                   17 ,                   11 )_r =  -1.4690134155389380     
 >>>>> entering elem. A(                   17 ,                   11 )_r =  -1.4690134093871166     
  difference is (in abs):  6.15182149665827183E-009
 WARNING ! reconstr.  A(                   17 ,                   12 )_r =  -2.4066453905543321     
 >>>>> entering elem. A(                   17 ,                   12 )_r =  -2.4066453892082791     
  difference is (in abs):  1.34605304680235349E-009
 WARNING ! reconstr.  A(                   17 ,                   13 )_r =   1.6853558634029455     
 >>>>> entering elem. A(                   17 ,                   13 )_r =   1.6853558676375542     
  difference is (in abs):  4.23460866372238343E-009
 WARNING ! reconstr.  A(                   17 ,                   14 )_r =   1.6853558637667434     
 >>>>> entering elem. A(                   17 ,                   14 )_r =   1.6853558689981583     
  difference is (in abs):  5.23141485686551277E-009
 WARNING ! reconstr.  A(                   17 ,                   15 )_r =   3.4705109733622543     
 >>>>> entering elem. A(                   17 ,                   15 )_r =   3.4705109892238397     
  difference is (in abs):  1.58615853784738192E-008
 WARNING ! reconstr.  A(                   17 ,                   16 )_r =  -1.7643456539080959     
 >>>>> entering elem. A(                   17 ,                   16 )_r =  -1.7643456520745531     
  difference is (in abs):  1.83354287308645780E-009
 WARNING ! reconstr.  A(                   18 ,                    8 )_r =  -1.1134257824451181     
 >>>>> entering elem. A(                   18 ,                    8 )_r =  -1.1134257861266406     
  difference is (in abs):  3.68152242025132637E-009
 WARNING ! reconstr.  A(                   18 ,                    9 )_r =  -1.3743190254317590     
 >>>>> entering elem. A(                   18 ,                    9 )_r =  -1.3743190236671126     
  difference is (in abs):  1.76464642898110924E-009
 WARNING ! reconstr.  A(                   18 ,                   11 )_r =  -2.4066453978302884     
 >>>>> entering elem. A(                   18 ,                   11 )_r =  -2.4066453888663091     
  difference is (in abs):  8.96397933658477086E-009
 WARNING ! reconstr.  A(                   18 ,                   12 )_r =  -1.4690134279371696     
 >>>>> entering elem. A(                   18 ,                   12 )_r =  -1.4690134246266098     
  difference is (in abs):  3.31055982627503909E-009
 WARNING ! reconstr.  A(                   18 ,                   14 )_r =   3.4705109354108559     
 >>>>> entering elem. A(                   18 ,                   14 )_r =   3.4705109371570870     
  difference is (in abs):  1.74623115967165177E-009
 WARNING ! reconstr.  A(                   18 ,                   15 )_r =   1.6853558267466722     
 >>>>> entering elem. A(                   18 ,                   15 )_r =   1.6853558451912249     
  difference is (in abs):  1.84445527739995896E-008
 WARNING ! reconstr.  A(                   18 ,                   16 )_r =  -1.7643456586083637     
 >>>>> entering elem. A(                   18 ,                   16 )_r =  -1.7643456492805853     
  difference is (in abs):  9.32777832751696678E-009
 WARNING ! reconstr.  A(                   18 ,                   17 )_r =  -1.7643456641671966     
 >>>>> entering elem. A(                   18 ,                   17 )_r =  -1.7643456595542375     
  difference is (in abs):  4.61295912579373635E-009
 WARNING ! reconstr.  A(                   19 ,                    7 )_r =   1.3730654616520050     
 >>>>> entering elem. A(                   19 ,                    7 )_r =   1.3730654585277762     
  difference is (in abs):  3.12422887560614981E-009
 WARNING ! reconstr.  A(                   19 ,                    8 )_r =  0.87127244564180695     
 >>>>> entering elem. A(                   19 ,                    8 )_r =  0.87127244165765205     
  difference is (in abs):  3.98415489488712637E-009
 WARNING ! reconstr.  A(                   19 ,                    9 )_r =  0.87127244146540750     
 >>>>> entering elem. A(                   19 ,                    9 )_r =  0.87127244252098990     
  difference is (in abs):  1.05558239926750730E-009
 WARNING ! reconstr.  A(                   19 ,                   10 )_r =  0.70453543608891822     
 >>>>> entering elem. A(                   19 ,                   10 )_r =  0.70453542678660597     
  difference is (in abs):  9.30231225382271987E-009
 WARNING ! reconstr.  A(                   19 ,                   11 )_r =  0.86580673523712892     
 >>>>> entering elem. A(                   19 ,                   11 )_r =  0.86580674540891778     
  difference is (in abs):  1.01717888556507319E-008
 WARNING ! reconstr.  A(                   19 ,                   12 )_r =  0.86580674810102265     
 >>>>> entering elem. A(                   19 ,                   12 )_r =  0.86580675229924964     
  difference is (in abs):  4.19822698827232443E-009
 WARNING ! reconstr.  A(                   19 ,                   13 )_r =  -1.5964674765418734     
 >>>>> entering elem. A(                   19 ,                   13 )_r =  -1.5964674804854440     
  difference is (in abs):  3.94357058119965131E-009
 WARNING ! reconstr.  A(                   19 ,                   14 )_r =  -1.0420046271465253     
 >>>>> entering elem. A(                   19 ,                   14 )_r =  -1.0420046253748296     
  difference is (in abs):  1.77169567905366421E-009
 WARNING ! reconstr.  A(                   19 ,                   15 )_r =  -1.0420046094805009     
 >>>>> entering elem. A(                   19 ,                   15 )_r =  -1.0420045951759676     
  difference is (in abs):  1.43045333356184301E-008
 WARNING ! reconstr.  A(                   19 ,                   16 )_r =   2.3278788437892213     
 >>>>> entering elem. A(                   19 ,                   16 )_r =   2.3278788362076739     
  difference is (in abs):  7.58154738988991994E-009
 WARNING ! reconstr.  A(                   19 ,                   17 )_r =   1.2504229843616483     
 >>>>> entering elem. A(                   19 ,                   17 )_r =   1.2504229777987348     
  difference is (in abs):  6.56291354594884524E-009
 WARNING ! reconstr.  A(                   19 ,                   18 )_r =   1.2504229610785846     
 >>>>> entering elem. A(                   19 ,                   18 )_r =   1.2504229466721881     
  difference is (in abs):  1.44063965201723931E-008
 WARNING ! reconstr.  A(                   20 ,                    5 )_r = -0.74048736910481350     
 >>>>> entering elem. A(                   20 ,                    5 )_r = -0.74048736785113078     
  difference is (in abs):  1.25368271319814539E-009
 WARNING ! reconstr.  A(                   20 ,                    7 )_r =  0.87127244134171566     
 >>>>> entering elem. A(                   20 ,                    7 )_r =  0.87127244488317501     
  difference is (in abs):  3.54145934799987572E-009
 WARNING ! reconstr.  A(                   20 ,                    8 )_r =   1.3730654612154471     
 >>>>> entering elem. A(                   20 ,                    8 )_r =   1.3730654531885875     
  difference is (in abs):  8.02685962142390963E-009
 WARNING ! reconstr.  A(                   20 ,                    9 )_r =  0.87127244474686438     
 >>>>> entering elem. A(                   20 ,                    9 )_r =  0.87127244775945201     
  difference is (in abs):  3.01258762380740563E-009
 WARNING ! reconstr.  A(                   20 ,                   10 )_r =  0.86580674357537657     
 >>>>> entering elem. A(                   20 ,                   10 )_r =  0.86580673927346652     
  difference is (in abs):  4.30191005040825303E-009
 WARNING ! reconstr.  A(                   20 ,                   11 )_r =  0.70453543408075392     
 >>>>> entering elem. A(                   20 ,                   11 )_r =  0.70453545118289185     
  difference is (in abs):  1.71021379280489327E-008
 WARNING ! reconstr.  A(                   20 ,                   13 )_r =  -1.0420046235376510     
 >>>>> entering elem. A(                   20 ,                   13 )_r =  -1.0420046305662254     
  difference is (in abs):  7.02857438916737465E-009
 WARNING ! reconstr.  A(                   20 ,                   14 )_r =  -1.5964674913120680     
 >>>>> entering elem. A(                   20 ,                   14 )_r =  -1.5964674822025700     
  difference is (in abs):  9.10949804477922953E-009
 WARNING ! reconstr.  A(                   20 ,                   15 )_r =  -1.0420046215003822     
 >>>>> entering elem. A(                   20 ,                   15 )_r =  -1.0420046072758851     
  difference is (in abs):  1.42244971357285976E-008
 WARNING ! reconstr.  A(                   20 ,                   16 )_r =   1.2504229589540059     
 >>>>> entering elem. A(                   20 ,                   16 )_r =   1.2504229609185131     
  difference is (in abs):  1.96450722356189544E-009
 WARNING ! reconstr.  A(                   20 ,                   17 )_r =   1.2504229687037873     
 >>>>> entering elem. A(                   20 ,                   17 )_r =   1.2504229697224218     
  difference is (in abs):  1.01863451007488948E-009
 WARNING ! reconstr.  A(                   20 ,                   18 )_r =   2.3278788264287882     
 >>>>> entering elem. A(                   20 ,                   18 )_r =   2.3278788342722692     
  difference is (in abs):  7.84348097582210357E-009
 WARNING ! reconstr.  A(                   20 ,                   19 )_r =  -1.4108947392669524     
 >>>>> entering elem. A(                   20 ,                   19 )_r =  -1.4108947313798126     
  difference is (in abs):  7.88713983013167308E-009
 WARNING ! reconstr.  A(                   21 ,                    7 )_r =  0.87127243197755866     
 >>>>> entering elem. A(                   21 ,                    7 )_r =  0.87127242644965008     
  difference is (in abs):  5.52790857533125291E-009
 WARNING ! reconstr.  A(                   21 ,                    8 )_r =  0.87127243394206699     
 >>>>> entering elem. A(                   21 ,                    8 )_r =  0.87127242882183964     
  difference is (in abs):  5.12022735321693290E-009
 WARNING ! reconstr.  A(                   21 ,                   10 )_r =  0.86580674152355652     
 >>>>> entering elem. A(                   21 ,                   10 )_r =  0.86580674941069447     
  difference is (in abs):  7.88713794275253122E-009
 WARNING ! reconstr.  A(                   21 ,                   11 )_r =  0.86580673856951795     
 >>>>> entering elem. A(                   21 ,                   11 )_r =  0.86580674839024141     
  difference is (in abs):  9.82072345667717173E-009
 WARNING ! reconstr.  A(                   21 ,                   12 )_r =  0.70453541274764631     
 >>>>> entering elem. A(                   21 ,                   12 )_r =  0.70453542048926465     
  difference is (in abs):  7.74161834637965285E-009
 WARNING ! reconstr.  A(                   21 ,                   13 )_r =  -1.0420046070066746     
 >>>>> entering elem. A(                   21 ,                   13 )_r =  -1.0420045992650557     
  difference is (in abs):  7.74161890149116516E-009
 WARNING ! reconstr.  A(                   21 ,                   14 )_r =  -1.0420046158833434     
 >>>>> entering elem. A(                   21 ,                   14 )_r =  -1.0420046101353364     
  difference is (in abs):  5.74800695929411631E-009
 WARNING ! reconstr.  A(                   21 ,                   15 )_r =  -1.5964674762872169     
 >>>>> entering elem. A(                   21 ,                   15 )_r =  -1.5964674575661775     
  difference is (in abs):  1.87210393853831647E-008
 WARNING ! reconstr.  A(                   21 ,                   16 )_r =   1.2504229593032503     
 >>>>> entering elem. A(                   21 ,                   16 )_r =   1.2504229621845298     
  difference is (in abs):  2.88127943726124158E-009
 WARNING ! reconstr.  A(                   21 ,                   18 )_r =   1.2504229497571944     
 >>>>> entering elem. A(                   21 ,                   18 )_r =   1.2504229438927723     
  difference is (in abs):  5.86442205907644620E-009
 WARNING ! reconstr.  A(                   21 ,                   19 )_r =  -1.4108947268396164     
 >>>>> entering elem. A(                   21 ,                   19 )_r =  -1.4108947197091766     
  difference is (in abs):  7.13043979416738694E-009
 WARNING ! reconstr.  A(                   21 ,                   20 )_r =  -1.4108947376371379     
 >>>>> entering elem. A(                   21 ,                   20 )_r =  -1.4108947407803498     
  difference is (in abs):  3.14321191297040059E-009
 WARNING ! reconstr.  A(                   22 ,                    7 )_r = -6.01619344379286866E-002
 >>>>> entering elem. A(                   22 ,                    7 )_r = -6.01619395051784522E-002
  difference is (in abs):  5.06724976562233920E-009
 WARNING ! reconstr.  A(                   22 ,                    8 )_r = -0.38078611501077819     
 >>>>> entering elem. A(                   22 ,                    8 )_r = -0.38078611838471943     
  difference is (in abs):  3.37394123750556219E-009
 WARNING ! reconstr.  A(                   22 ,                    9 )_r = -0.38078611582750466     
 >>>>> entering elem. A(                   22 ,                    9 )_r = -0.38078611693674702     
  difference is (in abs):  1.10924236462750514E-009
 WARNING ! reconstr.  A(                   22 ,                   10 )_r = -0.68431357102963386     
 >>>>> entering elem. A(                   22 ,                   10 )_r = -0.68431356943256105     
  difference is (in abs):  1.59707280733556445E-009
 WARNING ! reconstr.  A(                   22 ,                   11 )_r = -0.43348324172984576     
 >>>>> entering elem. A(                   22 ,                   11 )_r = -0.43348323267127853     
  difference is (in abs):  9.05856722965836525E-009
 WARNING ! reconstr.  A(                   22 ,                   12 )_r = -0.43348324240650993     
 >>>>> entering elem. A(                   22 ,                   12 )_r = -0.43348323581085424     
  difference is (in abs):  6.59565568827957804E-009
 WARNING ! reconstr.  A(                   22 ,                   13 )_r =  0.39187813303578883     
 >>>>> entering elem. A(                   22 ,                   13 )_r =  0.39187814215983963     
  difference is (in abs):  9.12405079267486485E-009
 WARNING ! reconstr.  A(                   22 ,                   14 )_r =  0.52180059329111850     
 >>>>> entering elem. A(                   22 ,                   14 )_r =  0.52180060029422748     
  difference is (in abs):  7.00310898160694251E-009
 WARNING ! reconstr.  A(                   22 ,                   15 )_r =  0.52180059271631696     
 >>>>> entering elem. A(                   22 ,                   15 )_r =  0.52180060666432837     
  difference is (in abs):  1.39480114125234422E-008
 WARNING ! reconstr.  A(                   22 ,                   16 )_r = -0.92925181884493280     
 >>>>> entering elem. A(                   22 ,                   16 )_r = -0.92925180792371975     
  difference is (in abs):  1.09212130450231371E-008
 WARNING ! reconstr.  A(                   22 ,                   17 )_r = -0.65503115323372330     
 >>>>> entering elem. A(                   22 ,                   17 )_r = -0.65503115059254924     
  difference is (in abs):  2.64117405723851562E-009
 WARNING ! reconstr.  A(                   22 ,                   19 )_r =   1.3769781420705853     
 >>>>> entering elem. A(                   22 ,                   19 )_r =   1.3769781563023571     
  difference is (in abs):  1.42317717610751515E-008
 WARNING ! reconstr.  A(                   22 ,                   20 )_r =  0.90274502432293913     
 >>>>> entering elem. A(                   22 ,                   20 )_r =  0.90274502757529262     
  difference is (in abs):  3.25235349762920123E-009
 WARNING ! reconstr.  A(                   22 ,                   21 )_r =  0.90274503506952863     
 >>>>> entering elem. A(                   22 ,                   21 )_r =  0.90274503648106474     
  difference is (in abs):  1.41153611021849201E-009
 WARNING ! reconstr.  A(                   23 ,                    7 )_r = -0.38078611359378556     
 >>>>> entering elem. A(                   23 ,                    7 )_r = -0.38078611177712673     
  difference is (in abs):  1.81665882337256335E-009
 WARNING ! reconstr.  A(                   23 ,                    8 )_r = -6.01619217632105088E-002
 >>>>> entering elem. A(                   23 ,                    8 )_r = -6.01619240929380794E-002
  difference is (in abs):  2.32972757058247382E-009
 WARNING ! reconstr.  A(                   23 ,                   10 )_r = -0.43348323254031146     
 >>>>> entering elem. A(                   23 ,                   10 )_r = -0.43348323551163048     
  difference is (in abs):  2.97131902415870286E-009
 WARNING ! reconstr.  A(                   23 ,                   11 )_r = -0.68431357243389335     
 >>>>> entering elem. A(                   23 ,                   11 )_r = -0.68431356725341175     
  difference is (in abs):  5.18048159925399432E-009
 WARNING ! reconstr.  A(                   23 ,                   12 )_r = -0.43348323833924945     
 >>>>> entering elem. A(                   23 ,                   12 )_r = -0.43348323717054882     
  difference is (in abs):  1.16870063626706155E-009
 WARNING ! reconstr.  A(                   23 ,                   13 )_r =  0.52180059233069165     
 >>>>> entering elem. A(                   23 ,                   13 )_r =  0.52180058531121176     
  difference is (in abs):  7.01947988623885522E-009
 WARNING ! reconstr.  A(                   23 ,                   15 )_r =  0.52180058804515272     
 >>>>> entering elem. A(                   23 ,                   15 )_r =  0.52180059509737475     
  difference is (in abs):  7.05222202856958802E-009
 WARNING ! reconstr.  A(                   23 ,                   16 )_r = -0.65503114116290884     
 >>>>> entering elem. A(                   23 ,                   16 )_r = -0.65503114467719570     
  difference is (in abs):  3.51428686151677994E-009
 WARNING ! reconstr.  A(                   23 ,                   17 )_r = -0.65503114669991291     
 >>>>> entering elem. A(                   23 ,                   17 )_r = -0.65503115067258477     
  difference is (in abs):  3.97267185814342838E-009
 WARNING ! reconstr.  A(                   23 ,                   18 )_r = -0.92925180365273230     
 >>>>> entering elem. A(                   23 ,                   18 )_r = -0.92925180698512122     
  difference is (in abs):  3.33238892036291645E-009
 WARNING ! reconstr.  A(                   23 ,                   20 )_r =   1.3769781366136167     
 >>>>> entering elem. A(                   23 ,                   20 )_r =   1.3769781293021879     
  difference is (in abs):  7.31142879573098980E-009
 WARNING ! reconstr.  A(                   23 ,                   21 )_r =  0.90274502674583335     
 >>>>> entering elem. A(                   23 ,                   21 )_r =  0.90274502421380021     
  difference is (in abs):  2.53203313871352975E-009
 WARNING ! reconstr.  A(                   23 ,                   22 )_r =  -1.1582536940477424     
 >>>>> entering elem. A(                   23 ,                   22 )_r =  -1.1582536988098582     
  difference is (in abs):  4.76211581279528673E-009
 WARNING ! reconstr.  A(                   24 ,                    6 )_r =  0.66920152567627156     
 >>>>> entering elem. A(                   24 ,                    6 )_r =  0.66920152448665249     
  difference is (in abs):  1.18961906991899014E-009
 WARNING ! reconstr.  A(                   24 ,                    7 )_r = -0.38078611003584223     
 >>>>> entering elem. A(                   24 ,                    7 )_r = -0.38078611371355464     
  difference is (in abs):  3.67771241238656899E-009
 WARNING ! reconstr.  A(                   24 ,                    8 )_r = -0.38078610685261094     
 >>>>> entering elem. A(                   24 ,                    8 )_r = -0.38078611340495172     
  difference is (in abs):  6.55234078106303741E-009
 WARNING ! reconstr.  A(                   24 ,                    9 )_r = -6.01619070730521413E-002
 >>>>> entering elem. A(                   24 ,                    9 )_r = -6.01619094219358885E-002
  difference is (in abs):  2.34888374722741489E-009
 WARNING ! reconstr.  A(                   24 ,                   10 )_r = -0.43348322785459481     
 >>>>> entering elem. A(                   24 ,                   10 )_r = -0.43348322209203616     
  difference is (in abs):  5.76255865247787824E-009
 WARNING ! reconstr.  A(                   24 ,                   11 )_r = -0.43348323151076351     
 >>>>> entering elem. A(                   24 ,                   11 )_r = -0.43348321938447043     
  difference is (in abs):  1.21262930807830571E-008
 WARNING ! reconstr.  A(                   24 ,                   12 )_r = -0.68431358365705852     
 >>>>> entering elem. A(                   24 ,                   12 )_r = -0.68431357462759479     
  difference is (in abs):  9.02946373226853893E-009
 WARNING ! reconstr.  A(                   24 ,                   13 )_r =  0.52180058578960575     
 >>>>> entering elem. A(                   24 ,                   13 )_r =  0.52180059316742700     
  difference is (in abs):  7.37782124282659879E-009
 WARNING ! reconstr.  A(                   24 ,                   14 )_r =  0.52180058433441445     
 >>>>> entering elem. A(                   24 ,                   14 )_r =  0.52180059450256522     
  difference is (in abs):  1.01681507658213377E-008
 WARNING ! reconstr.  A(                   24 ,                   15 )_r =  0.39187810164003195     
 >>>>> entering elem. A(                   24 ,                   15 )_r =  0.39187811712326948     
  difference is (in abs):  1.54832375254265742E-008
 WARNING ! reconstr.  A(                   24 ,                   16 )_r = -0.65503113868180696     
 >>>>> entering elem. A(                   24 ,                   16 )_r = -0.65503113303566352     
  difference is (in abs):  5.64614344167324589E-009
 WARNING ! reconstr.  A(                   24 ,                   17 )_r = -0.92925182099861592     
 >>>>> entering elem. A(                   24 ,                   17 )_r = -0.92925181776809040     
  difference is (in abs):  3.23052551376434849E-009
 WARNING ! reconstr.  A(                   24 ,                   18 )_r = -0.65503114080638636     
 >>>>> entering elem. A(                   24 ,                   18 )_r = -0.65503113896556897     
  difference is (in abs):  1.84081738741070922E-009
 WARNING ! reconstr.  A(                   24 ,                   19 )_r =  0.90274500456871432     
 >>>>> entering elem. A(                   24 ,                   19 )_r =  0.90274501225212589     
  difference is (in abs):  7.68341157364460514E-009
 WARNING ! reconstr.  A(                   24 ,                   20 )_r =  0.90274500769010046     
 >>>>> entering elem. A(                   24 ,                   20 )_r =  0.90274501014209818     
  difference is (in abs):  2.45199771597981453E-009
 WARNING ! reconstr.  A(                   24 ,                   21 )_r =   1.3769781074952330     
 >>>>> entering elem. A(                   24 ,                   21 )_r =   1.3769781096489169     
  difference is (in abs):  2.15368389788750392E-009
 WARNING ! reconstr.  A(                   24 ,                   23 )_r =  -1.1582536876412612     
 >>>>> entering elem. A(                   24 ,                   23 )_r =  -1.1582536836176587     
  difference is (in abs):  4.02360256224199020E-009
  The auxiliary file (lu=#,33) was closed, checking of A=P.Ad.P^H done

  GET_HINF_BD: H1 ON RKB/"k" block-diagonalized matrix is  written to the BSSMAT file.

  GET_HINF_BD: Full 4c ON RKB/"k" -> 2c ON/"k" picture change transformation matrix written to the BSSMAT file (PCTM_ONB).

  GET_HINF_BD: 4c ON RKB/"k"-> 2c ON RKB/"k" (ee) picture change transf. matrix (U1_ONBAS) saved, EOFLABEL renewed 

  GET_HINF_BD: H2c_infinite in ON RKB/"k" (ee) written to BSSMAT (H2C_ONBA), EOFLABEL renewed 

  H2CFINAL: H1AO_DK 

   AO_LL elements were written into the BSSMAT file, EOFLABEL renewed.

  GETPCTMAT: U1_ONBAS (4c ON->2c ON) read into TBUF.


        CMP_EIGVAL: Eigenvalues of H4c and H2c  Hamiltonians - comparison
        -----------------------------------------------------------------

        *** Fermion corep 1/2

     -15        -63372.7773193817
     -14        -44116.7327641473
     -13        -39472.4572477242
     -12        -38196.2447063600
     -11        -37796.2950110293
     -10        -37654.6084816318
      -9        -37599.2583041997
      -8        -37581.1031556185
      -7        -37581.1031556184
      -6        -37576.3323237266
      -5        -37573.5293043090
      -4        -37573.5293043089
      -3        -37573.5293043089
      -2        -37566.7045125401
      -1        -37562.0371433935
       1           -40.5426330578           -40.5426330578    0.75531D-11
       2           -10.1373250006           -10.1373250006    0.18350D-11
       3            -4.4857206277            -4.4857206277    0.30109D-11
       4            -3.8980652244            -3.8980652244   -0.45519D-12
       5            -3.8980652244            -3.8980652244    0.49227D-11
       6            -3.8967128407            -3.8967128407   -0.54050D-11
       7            -3.8967128407            -3.8967128407   -0.11102D-13
       8            -3.8967128407            -3.8967128407    0.75402D-11
       9            -1.9365170450            -1.9365170450   -0.11426D-10
      10            14.2996026618            14.2996026617    0.16053D-10
      11            91.6407017279            91.6407017279   -0.19142D-10
      12           370.6378095438           370.6378095438    0.68212D-12
      13          1390.3269434740          1390.3269434741   -0.68439D-10
      14          5399.0208506070          5399.0208506070   -0.90949D-12
      15         22546.0183912986         22546.0183912985    0.25466D-10



        CMP_EIGVAL: Eigenvalues of H4c and H2c  Hamiltonians - comparison
        -----------------------------------------------------------------

        *** Fermion corep 2/2

     -24        -38568.9472020354
     -23        -38401.5760410903
     -22        -38401.5760410902
     -21        -37803.1160346522
     -20        -37752.8974372592
     -19        -37752.8974372587
     -18        -37647.3826516331
     -17        -37627.1818175157
     -16        -37627.1818175064
     -15        -37601.8772633392
     -14        -37592.4708175959
     -13        -37592.4708175633
     -12        -37583.2269294659
     -11        -37577.5176453006
     -10        -37577.5176452825
      -9        -37573.0453265072
      -8        -37569.2254591718
      -7        -37569.2254591524
      -6        -37566.9255277523
      -5        -37564.4176637841
      -4        -37564.4176637607
      -3        -37563.0713024553
      -2        -37561.3258086017
      -1        -37561.3258085931
       1           -10.1342119443           -10.1342119443   -0.16573D-11
       2           -10.1233235165           -10.1233235165    0.36557D-11
       3           -10.1233235165           -10.1233235165   -0.30305D-11
       4            -4.5015584883            -4.5015584883   -0.20046D-11
       5            -4.4983364728            -4.4983364728    0.16609D-12
       6            -4.4983364728            -4.4983364728    0.18341D-11
       7            -2.5015683462            -2.5015683462    0.31166D-11
       8            -2.4999806668            -2.4999806668   -0.29066D-11
       9            -2.4999806668            -2.4999806668    0.45599D-11
      10            -0.2746124273            -0.2746124273   -0.15584D-11
      11            -0.2707295705            -0.2707295705   -0.38606D-11
      12            -0.2707295705            -0.2707295705   -0.18691D-12
      13             5.6335236307             5.6335236307   -0.87228D-11
      14             5.6427458024             5.6427458024    0.12810D-10
      15             5.6427458025             5.6427458024    0.92095D-11
      16            20.0940314811            20.0940314811    0.15074D-10
      17            20.1230094772            20.1230094772    0.59622D-10
      18            20.1230094773            20.1230094773    0.39968D-11
      19            87.8776453934            87.8776453934    0.27796D-10
      20            88.0881523302            88.0881523301    0.47635D-10
      21            88.0881523302            88.0881523302    0.66649D-11
      22           569.9517169082           569.9517169082    0.22169D-10
      23           572.9631389659           572.9631389659    0.37289D-10
      24           572.9631389660           572.9631389660    0.10800D-10


     *** BNCORR for < X_A | (-Zeff*G(a,r_C))/r_C | X_B > ***
         X=L,S ; G(a,r_C)=exp(-a*r_C^2)

               Nucleus    Charge=(-Zeff)   Exponent(a)
              -----------------------------------------
              -- Subshell n = 0, l = 0
                F             -1.00           0.40
              -- Subshell n = 1, l = 0
                F             -1.00          40.54
              -- Subshell n = 2, l = 0,1
                F             -7.00           1.37
              -----------------------------------------

 >>> Time used in BNCORR is   0.02 seconds
 >>> Time used in mk_bss is   0.10 seconds

  PROP2BSS: 2comp. operator (indxpr=  1) P2C_0001->Overlap matrix   was written to the BSSMAT file in LL block.
  ...operator was NOT picture change transformed

  PROP2BSS: 2comp. operator (indxpr=  2) P2C_0002->Nuc. attraction  was written to the BSSMAT file in LL block.
  ...operator was NOT picture change transformed

  PROP2BSS: 2comp. operator (indxpr=  3) P2C_0003->Beta matrix      was written to the BSSMAT file in LL block.
  ...operator was NOT picture change transformed

  PROP2BSS: 2comp. operator (indxpr=  4) P2C_0004->Kinetic energy   was written to the BSSMAT file in LL block.
  ...operator was NOT picture change transformed

  PROP2BSS: EOFLABEL was renewed after saving all 2c operators into BSSMAT.

  MAKE_H2C: Two-component BSS mode - positronic shells deleted !
 >>> Time used in mk_h2c is   0.11 seconds

  Nuclear Gaussian exponent for atom of charge   9.000 :    5.3546911034D+08


                      Nuclear contribution to dipole moments
                      --------------------------------------

                     All components zero by symmetry


                       Generating Lowdin canonical matrix:
                       -----------------------------------

       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.1D-02
   L   Ag    * Deleted:          1(Proj:          1, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B1g   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B2g   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 1.0D+00
   L   B3g   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B3u   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B2u   * Deleted:          0(Proj:          0, Lindep:          0)
       LOWGEN: Smallest ".LINDEP" test value of a kept orbital: 4.1D-05
   L   B1u   * Deleted:          0(Proj:          0, Lindep:          0)


      **********************************************************************
      ************************* Orbital dimensions *************************
      **********************************************************************

                                   Irrep 1 Irrep 2   Sum
No. of electronic orbitals (NESH):    15      24      39
No. of positronic orbitals (NPSH):     0       0       0
Total no. of orbitals      (NORB):    15      24      39
 >>> Time used in PAMSET is   0.14 seconds


 *******************************************************************************
 ************** Two-component BSS/DKH relativistic HF calculation **************
 *******************************************************************************


  GETH2CAO: asked for 2c Hamiltonian (param.I2COFK=7):H2CAO_LL

*** INFO *** No trial vectors found. Using bare nucleus approximation for initial trial vectors.
             Improved by an estimate of the electronic screening (Slater's rules).


########## START ITERATION NO.   1 ##########   Tue Jun 14 15:06:21 2011

It.   1    -52.25245627628      1.00D+20  0.00D+00  0.00D+00               0.00000000s   Scr. nuclei    Tue Jun 14

########## START ITERATION NO.   2 ##########   Tue Jun 14 15:06:21 2011


* GETGAB: label "GABAO1XX" not found; calling GABGEN.
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    0.17%   14.19%   53.00%   0.02000105s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.03200197s

########## END ITERATION NO.   2 ##########   Tue Jun 14 15:06:21 2011

It.   2    -99.27002138549      4.70D+01  5.75D+00  2.10D+00               0.03200197s   LL             Tue Jun 14

########## START ITERATION NO.   3 ##########   Tue Jun 14 15:06:21 2011

    3 *** Differential density matrix. DCOVLP     = 1.0096
    3 *** Differential density matrix. DVOVLP( 1) = 0.1188
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    0.25%   14.18%   52.94%   0.02400196s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02400202s

########## END ITERATION NO.   3 ##########   Tue Jun 14 15:06:21 2011

It.   3    -99.48211696389      2.12D-01 -4.85D-01  2.09D-01   DIIS   2    0.02400202s   LL             Tue Jun 14

########## START ITERATION NO.   4 ##########   Tue Jun 14 15:06:21 2011

    4 *** Differential density matrix. DCOVLP     = 1.0099
    4 *** Differential density matrix. DVOVLP( 1) = 0.6171
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    0.35%   14.14%   52.86%   0.02000099s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02400100s

########## END ITERATION NO.   4 ##########   Tue Jun 14 15:06:21 2011

It.   4    -99.48817110157      6.05D-03  1.58D-01  7.45D-02   DIIS   3    0.02400100s   LL             Tue Jun 14

########## START ITERATION NO.   5 ##########   Tue Jun 14 15:06:21 2011

    5 *** Differential density matrix. DCOVLP     = 0.9998
    5 *** Differential density matrix. DVOVLP( 1) = 0.9479
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    0.50%   14.11%   52.74%   0.02000099s
>>> Total wall time: 1.00000000s
>>> Total CPU-time : 0.02400202s

########## END ITERATION NO.   5 ##########   Tue Jun 14 15:06:21 2011

It.   5    -99.48874827537      5.77D-04 -3.90D-02  5.06D-03   DIIS   4    0.02400202s   LL             Tue Jun 14

########## START ITERATION NO.   6 ##########   Tue Jun 14 15:06:22 2011

    6 *** Differential density matrix. DCOVLP     = 1.0002
    6 *** Differential density matrix. DVOVLP( 1) = 0.9833
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    0.67%   14.08%   52.62%   0.02000099s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02000099s

########## END ITERATION NO.   6 ##########   Tue Jun 14 15:06:22 2011

It.   6    -99.48875307299      4.80D-06  2.93D-03  3.12D-04   DIIS   5    0.02000099s   LL             Tue Jun 14

########## START ITERATION NO.   7 ##########   Tue Jun 14 15:06:22 2011

    7 *** Differential density matrix. DCOVLP     = 1.0000
    7 *** Differential density matrix. DVOVLP( 1) = 0.9987
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    1.17%   13.99%   52.33%   0.02000099s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02000099s

########## END ITERATION NO.   7 ##########   Tue Jun 14 15:06:22 2011

It.   7    -99.48875309030      1.73D-08 -5.99D-05  4.24D-05   DIIS   6    0.02000099s   LL             Tue Jun 14

########## START ITERATION NO.   8 ##########   Tue Jun 14 15:06:22 2011

    8 *** Differential density matrix. DCOVLP     = 1.0000
    8 *** Differential density matrix. DVOVLP( 1) = 0.9999
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    3.16%   13.80%   51.56%   0.02000201s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02400202s

########## END ITERATION NO.   8 ##########   Tue Jun 14 15:06:22 2011

It.   8    -99.48875309061      3.11D-10 -1.46D-05  3.03D-06   DIIS   7    0.02400202s   LL             Tue Jun 14

########## START ITERATION NO.   9 ##########   Tue Jun 14 15:06:22 2011

    9 *** Differential density matrix. DCOVLP     = 1.0000
    9 *** Differential density matrix. DVOVLP( 1) = 1.0000
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%    6.73%   13.33%   50.18%   0.02400100s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02400100s

########## END ITERATION NO.   9 ##########   Tue Jun 14 15:06:22 2011

It.   9    -99.48875309062      3.52D-12  3.98D-07  5.98D-07   DIIS   8    0.02400100s   LL             Tue Jun 14

########## START ITERATION NO.  10 ##########   Tue Jun 14 15:06:22 2011

   10 *** Differential density matrix. DCOVLP     = 1.0000
   10 *** Differential density matrix. DVOVLP( 1) = 1.0000
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12    0.80%   10.60%   12.90%   48.67%   0.02000099s
>>> Total wall time: 0.00000000s
>>> Total CPU-time : 0.02400196s

########## END ITERATION NO.  10 ##########   Tue Jun 14 15:06:22 2011

It.  10    -99.48875309062      3.41D-13  7.83D-08  4.10D-08   DIIS   8    0.02400196s   LL             Tue Jun 14


                                   SCF - CYCLE
                                   -----------

* Convergence on norm of error vector (gradient).
  Desired convergence:1.000D-07
  Allowed convergence:1.000D-06

* ERGVAL - convergence in total energy
* FCKVAL - convergence in maximum change in total Fock matrix
* EVCVAL - convergence in error vector (gradient)
--------------------------------------------------------------------------------------------------------------------------------
           Energy               ERGVAL    FCKVAL    EVCVAL      Conv.acc    CPU          Integrals   Time stamp
--------------------------------------------------------------------------------------------------------------------------------
It.   1    -52.25245627628      1.00D+20  0.00D+00  0.00D+00               0.00000000s   Scr. nuclei    Tue Jun 14
It.   2    -99.27002138549      4.70D+01  5.75D+00  2.10D+00               0.03200197s   LL             Tue Jun 14
It.   3    -99.48211696389      2.12D-01 -4.85D-01  2.09D-01   DIIS   2    0.02400202s   LL             Tue Jun 14
It.   4    -99.48817110157      6.05D-03  1.58D-01  7.45D-02   DIIS   3    0.02400100s   LL             Tue Jun 14
It.   5    -99.48874827537      5.77D-04 -3.90D-02  5.06D-03   DIIS   4    0.02400202s   LL             Tue Jun 14
It.   6    -99.48875307299      4.80D-06  2.93D-03  3.12D-04   DIIS   5    0.02000099s   LL             Tue Jun 14
It.   7    -99.48875309030      1.73D-08 -5.99D-05  4.24D-05   DIIS   6    0.02000099s   LL             Tue Jun 14
It.   8    -99.48875309061      3.11D-10 -1.46D-05  3.03D-06   DIIS   7    0.02400202s   LL             Tue Jun 14
It.   9    -99.48875309062      3.52D-12  3.98D-07  5.98D-07   DIIS   8    0.02400100s   LL             Tue Jun 14
It.  10    -99.48875309062      3.41D-13  7.83D-08  4.10D-08   DIIS   8    0.02400196s   LL             Tue Jun 14
--------------------------------------------------------------------------------------------------------------------------------
* Convergence after   10 iterations.
* Average elapsed time per iteration: 
      No 2-ints    :    0.00000000s
      LL           :    0.11111111s


                                   TOTAL ENERGY
                                   ------------

   Electronic energy                        :    -99.488753090615376

   Other contributions to the total energy
   Nuclear repulsion energy                 :      0.000000000000000

   Sum of all contributions to the energy
   Total energy                             :    -99.488753090615376


                                   Eigenvalues
                                   -----------


* Fermion symmetry E1g
  * Closed shell, f = 1.0000
   -26.40345479392  ( 2)       -1.57286187495  ( 2)
  * Virtual eigenvalues, f = 0.0000
     0.95011105879  ( 2)        4.52302227378  ( 4)        4.52450933426  ( 6)        5.75287446873  ( 2)       27.26049481988  ( 2)
   109.03744647523  ( 2)      391.87550257502  ( 2)     1414.43663468584  ( 2)     5424.76235182226  ( 2)    22572.42967144597  ( 2)

* Fermion symmetry E1u
  * Open shell #1, f = 0.8333
    -0.72836157216  ( 2)       -0.72490443954  ( 4)
  * Virtual eigenvalues, f = 0.0000
     0.75551337688  ( 2)        0.75674908860  ( 4)        2.73620637937  ( 2)        2.73891706718  ( 4)        6.74604317431  ( 2)
     6.75146693369  ( 4)       14.73599655891  ( 2)       14.74638674372  ( 4)       32.12013075536  ( 2)       32.15137488415  ( 4)
   105.30176183607  ( 2)      105.51440877878  ( 4)      592.78224667881  ( 2)      595.79706733668  ( 4)
* HOMO - LUMO gap:

    E(LUMO) :     0.75551338 au (symmetry E1u)
  - E(HOMO) :    -0.72490444 au (symmetry E1u)
  ------------------------------------------
    gap     :     1.48041782 au



    **************************************************************************
    **************** Transformation to Molecular Spinor Basis ****************
    **************************************************************************


          Written by Luuk Visscher, Jon Laerdahl & Trond Saue
          Odense, 1997




     ************************************************************************
     **************** Transformation of 2-electron integrals ****************
     ************************************************************************


 Transformation started at : Tue Jun 14 15:06:22 2011

* REACMO: Coefficients read from file DFCOEF - Total energy: -99.4887530906150346
* Heading :Fluorine atom.                                    Tue Jun 14 15:06:22 2011

* Orbital ranges for 4-index transformation:


 * Fermion ircop E1g

      Index 1    4 orbitals
          2    3    4    5

      Index 2    4 orbitals
          2    3    4    5

      Index 3    4 orbitals
          2    3    4    5

      Index 4    4 orbitals
          2    3    4    5


 * Fermion ircop E1u

      Index 1   12 orbitals
          1    2    3    4    5    6    7    8    9   10   11   12

      Index 2   12 orbitals
          1    2    3    4    5    6    7    8    9   10   11   12

      Index 3   12 orbitals
          1    2    3    4    5    6    7    8    9   10   11   12

      Index 4   12 orbitals
          1    2    3    4    5    6    7    8    9   10   11   12

* Core orbital ranges for 2-index transformation:


 * Fermion ircop E1g

      Index 1    1 orbitals
          1


 * Fermion ircop E1u

      No orbitals for index 1


    **************************************************************************
    **************** Transformation to Molecular Spinor Basis ****************
    **************************************************************************


          Written by Luuk Visscher, Jon Laerdahl & Trond Saue
          Odense, 1997




       ********************************************************************
       **************** Transformation of core Fock matrix ****************
       ********************************************************************


 Transformation started at : Tue Jun 14 15:06:22 2011

* REACMO: Coefficients read from file DFCOEF - Total energy: -99.4887530906150346
* Heading :Fluorine atom.                                    Tue Jun 14 15:06:22 2011
SCR        scr.thr.    Step1    Step2  Coulomb  Exchange    CPU-time
SOfock:LL  1.00D-12   71.18%    0.13%    0.67%    9.28%   0.01600099s

* REAFCK: Fock matrix read from file DFFCK1                                                      
* Heading :Fluorine atom.                                    Tue Jun 14 15:06:21 2011


 Core energy (includes nuclear repulsion) :            -75.5523600022
 - Electronic part :                                   -75.5523600022
   - One-electron terms :                              -80.9208456794
   - Two-electron terms :                                5.3684856771


 MOLFDIR file MRCONEE is written
 - Integral class 1 : (LL|??)
   - Beginning task   1 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   2 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   3 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   4 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   5 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   6 of   7 after      0. seconds and      0. CPU-seconds
   - Beginning task   7 of   7 after      0. seconds and      0. CPU-seconds
* Screening statistics:
   (LL|LL)ints :   0.00%
   Total       :   0.00%
 - Starting symmetrization after           0.00 seconds
 - Finished symmetrization after           0.00 seconds
 - Binary  file MDCINT was written.

------ Timing report (in CPU seconds) of module  integral transformation      

 Time in  Computing+transform. i       0.104 seconds
 Time in  Symmetrizing MO integr       0.028 seconds

------ End of timing report ------



 Total wall time used in PAMTRA :   00:00:00
 Total CPU  time used in PAMTRA (master only) :   00:00:00



 Transformation ended at : Tue Jun 14 15:06:22 2011


################################################################################
 DIRect Relativistic CI program version 2.0

 Written by Luuk Visscher 

 This run started at 14 Jun 11  15:06:22


 Information read from MRCONEE 


 Breit Interaction included :                    F
 Core Energy :                   -75.55236000    
 Number of orbitals :                           32
* List of allowed representations:
    1Eg
    2Eg
    1Eu
    2Eu


 Orbital Index     Representation        Orbital Energy
     1       1       Eg 1Eg                -1.572861875    
     5       2       Eg 2Eg                -1.572861875    
     9       3       Eu 1Eu               -0.7283615722    
    10       4       Eu 1Eu               -0.7249044395    
    11       5       Eu 1Eu               -0.7249044395    
    21       6       Eu 2Eu               -0.7283615722    
    22       7       Eu 2Eu               -0.7249044395    
    23       8       Eu 2Eu               -0.7249044395    
     2       9       Eg 1Eg                0.9501110588    
     3      10       Eg 1Eg                 4.523022274    
     4      11       Eg 1Eg                 4.523022274    
     6      12       Eg 2Eg                0.9501110588    
     7      13       Eg 2Eg                 4.523022274    
     8      14       Eg 2Eg                 4.523022274    
    12      15       Eu 1Eu                0.7555133769    
    13      16       Eu 1Eu                0.7567490886    
    14      17       Eu 1Eu                0.7567490886    
    15      18       Eu 1Eu                 2.736206379    
    16      19       Eu 1Eu                 2.738917067    
    17      20       Eu 1Eu                 2.738917067    
    18      21       Eu 1Eu                 6.746043174    
    19      22       Eu 1Eu                 6.751466934    
    20      23       Eu 1Eu                 6.751466934    
    24      24       Eu 2Eu                0.7555133769    
    25      25       Eu 2Eu                0.7567490886    
    26      26       Eu 2Eu                0.7567490886    
    27      27       Eu 2Eu                 2.736206379    
    28      28       Eu 2Eu                 2.738917067    
    29      29       Eu 2Eu                 2.738917067    
    30      30       Eu 2Eu                 6.746043174    
    31      31       Eu 2Eu                 6.751466934    
    32      32       Eu 2Eu                 6.751466934    

   68125 Unique Coulomb integrals read from MDCINT ( 14Jun11   15:06:22)
  125518 Coulomb integrals written to MRCTWOE

 Real arithmetic will be used in EXPAND and TWOLIN

 Abelian Representation :  1Eu
 Number of reference determinants :         3
 Total number of determinants :      3987
 Number of roots to be optimized :  3
 Start vectors method :  1
 Overlap Selection : F
 Position in COSCI space :   1   2   3
 Maximum number of iterations :   15
 Energy convergence required :    0.1E-08
 Residue convergence required :   0.1E-09
 Maximum of CPU seconds to be used :        604800.0
 Restart calculation : F
 Printing contributions of important spinors : T
 Contributions are printed for coefficients larger then :   0.1    
 Generate natural spinors after CI calculation : F

 Total number of active electrons :    7
 Number of active orbitals :   32

 RAS1 :   2
 RAS2 :   6
 RAS3 :  24

 Allowed RAS configurations :

  RAS1  RAS2  RAS3  Determinants (All Representations)
     2     5     0           6
     2     4     1         360
     2     3     2        5520
     1     6     0           2
     1     5     1         288
     1     4     2        8280
     0     6     1          24
     0     5     2        1656

 1-electron excitations will be written to file

 Setup Routine completed in    0.132 SECONDS

100.00 Percent of the Coupling Coefficients are stored.

 Start vectors are single determinants

 Root   1 is determinant   1 Exp. Value    -99.489639140342

 Root   2 is determinant   2 Exp. Value    -99.489639140335

 Root   3 is determinant   3 Exp. Value    -99.486980991168


 Iter Root Isel             Energy       Correlation     Convergence   Residue
    1    1    1     -99.4896391403      0.00000000000     -.1421E-13 0.6561    
    1    2    2     -99.4896391403      0.00000000000     0.2842E-13 0.6561    
    1    3    3     -99.4869809912      0.00000000000      0.000     0.6314    
    2    1    1     -99.5958985344     -.106259394031     -.1063     0.8092E-02
    2    2    2     -99.5958385868     -.106199446476     -.1062     0.8240E-02
    2    3    3     -99.5947768438     -.107795852666     -.1078     0.9425E-02
    3    1    1     -99.5981123294     -.108473189079     -.2214E-02 0.5566E-03
    3    2    2     -99.5981044262     -.108465285842     -.2266E-02 0.5820E-03
    3    3    3     -99.5972245481     -.110243556925     -.2448E-02 0.5828E-03
    4    1    1     -99.5982422183     -.108603077999     -.1299E-03 0.2188E-04
    4    2    2     -99.5982418232     -.108602682857     -.1374E-03 0.2367E-04
    4    3    3     -99.5973622700     -.110381278809     -.1377E-03 0.2705E-04
    5    1    1     -99.5982468163     -.108607675995     -.4598E-05 0.3163E-06
    5    2    2     -99.5982468087     -.108607668333     -.4985E-05 0.3499E-06
    5    3    3     -99.5973681917     -.110387200482     -.5922E-05 0.4005E-06
    6    1    1     -99.5982468925     -.108607752145     -.7615E-07 0.7112E-08
    6    2    2     -99.5982468923     -.108607752001     -.8367E-07 0.7890E-08
    6    3    3     -99.5973682780     -.110387286870     -.8639E-07 0.8520E-08
    7    1    1     -99.5982468943     -.108607753943     -.1798E-08 0.2190E-09
    7    2    2     -99.5982468943     -.108607753947     -.1946E-08 0.2425E-09
    7    3    3     -99.5973682800     -.110387288865     -.1995E-08 0.2559E-09
    8    1    1     -99.5982468944     -.108607754008     -.6516E-10 0.8058E-11
    8    2    2     -99.5982468943     -.108607754009     -.6139E-10 0.6794E-11
    8    3    3     -99.5973682801     -.110387288923     -.5787E-10 0.7182E-11


 End of iterations :                 Converged

 --- Root   1 ---
@ CI Total Energy :                     -99.598246894350
@ Relative to reference :                -0.108607754008
@ 1 - Reference weight :                  0.026194714794
@ Residue :                               0.000000000008

 --- Root   2 ---
@ CI Total Energy :                     -99.598246894344
@ Relative to reference :                -0.108607754009
@ 1 - Reference weight :                  0.026194717805
@ Residue :                               0.000000000007

 --- Root   3 ---
@ (MR)CI-SD Energy :                  -99.597368280092
@ Correlation energy :                 -0.110387288923
@ Davidson correction :                -0.002769071182
@ (MR)CI-SD+Q energy:                 -99.600137351274
@ Residue :                             0.000000000007

 Total CPU time :          4.056

 Vector #   1 read from MRCFINV; Eigenvalue     -99.598246894350

 Vector #   2 read from MRCFINV; Eigenvalue     -99.598246894344

 Vector #   3 read from MRCFINV; Eigenvalue     -99.597368280092

 Occupation numbers : 

 Orbital Representation   Root  1   Root  2   Root  3   Root
     1         1Eg       0.996233  0.995101  0.994627
     2         2Eg       0.995667  0.996800  0.995525
     3         1Eu       0.991124  0.991451  0.992484
     4         1Eu       0.992190  0.994218  0.992364
     5         1Eu       0.993439  0.992192  0.992029
     6         2Eu       0.991287  0.990961  0.004523
     7         2Eu       0.990670  0.004281  0.991862
     8         2Eu       0.005060  0.990668  0.992196
     9         1Eg       0.003185  0.003283  0.003263
    10         1Eg       0.000877  0.001185  0.000606
    11         1Eg       0.000922  0.000978  0.001039
    12         2Eg       0.003234  0.003135  0.003142
    13         2Eg       0.001110  0.000828  0.001523
    14         2Eg       0.001091  0.001010  0.001090
    15         1Eu       0.004621  0.004050  0.005132
    16         1Eu       0.004477  0.004743  0.003896
    17         1Eu       0.004618  0.004479  0.004435
    18         1Eu       0.001841  0.001753  0.001860
    19         1Eu       0.001795  0.001825  0.001762
    20         1Eu       0.001784  0.001821  0.001782
    21         1Eu       0.000300  0.000290  0.000297
    22         1Eu       0.000292  0.000290  0.000285
    23         1Eu       0.000285  0.000293  0.000291
    24         2Eu       0.004336  0.004907  0.000583
    25         2Eu       0.004508  0.000400  0.004713
    26         2Eu       0.000526  0.004506  0.004174
    27         2Eu       0.001797  0.001885  0.000271
    28         2Eu       0.001237  0.000834  0.001825
    29         2Eu       0.000875  0.001211  0.001805
    30         2Eu       0.000295  0.000305  0.000033
    31         2Eu       0.000254  0.000066  0.000296
    32         2Eu       0.000071  0.000253  0.000290


 Contributions of start vectors to final CI vector   1
  0.97380529      0.20737582E-02  0.27744812E-17


 Contributions of start vectors to final CI vector   2
  0.20737582E-02  0.97380528      0.65873840E-19


 Contributions of start vectors to final CI vector   3
  0.22831026E-16  0.49956125E-22  0.97491495    


Determinants with coefficient .GT. 0.1000

Determinant(s) of root:    1 with eigenvalue:     -99.59824689

Determinant        1 with square of coeff.       0.97380529
Holes in RAS1: 
Holes in RAS2:    8( 2Eu)
Elec. in RAS3: 

Determinant(s) of root:    2 with eigenvalue:     -99.59824689

Determinant        2 with square of coeff.       0.97380528
Holes in RAS1: 
Holes in RAS2:    7( 2Eu)
Elec. in RAS3: 

Determinant(s) of root:    3 with eigenvalue:     -99.59736828

Determinant        3 with square of coeff.       0.97491495
Holes in RAS1: 
Holes in RAS2:    6( 2Eu)
Elec. in RAS3: 


          -- Normal end of program --

 
     Date and time (Linux)  : Tue Jun 14 15:06:26 2011 
     Host name              :                                         
>>>> Node 0, utime: 3, stime: 0, minflt: 127772, majflt: 0, nvcsw: 8, nivcsw: 79, maxrss: 509328
>>>> Total WALL time used in DIRAC: 5s
********** E N D   of   D I R A C  output  **********
*****************************************************

  
  Dynamical Memory Usage Summary
  
  Mean allocation size (Mb) :         0.85
  
  Largest                   10  allocations
  
      488.28 Mb at subroutine                                            for work array at main                        
        0.15 Mb at subroutine                                            for unnamed variable                          
        0.15 Mb at subroutine                                            for unnamed variable                          
        0.15 Mb at subroutine                                            for unnamed variable                          
        0.07 Mb at subroutine                                            for unnamed variable                          
        0.07 Mb at subroutine                                            for unnamed variable                          
        0.07 Mb at subroutine                                            for unnamed variable                          
        0.01 Mb at subroutine                                            for buf in butobs                             
        0.01 Mb at subroutine                                            for unnamed variable                          
        0.01 Mb at subroutine                                            for unnamed variable                          
  
  Peak memory usage    (Mb) :       489.00
       reached at subroutine :                                           
              for variable   : unnamed variable                          
  
 MEMGET high-water mark:     1.47 MB

*****************************************************
