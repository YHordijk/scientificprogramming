DIRAC pam run in /home/bast/dirac/git_trunk/test/visual_lao_shielding
-e Size of all static allocations: 116.927 MB 
DIRAC serial starts by allocating 63910761 words (487 MB) of memory
DIRAC serial has no limitations in place for the amount of dynamically allocated memory
 
Note: maximum allocatable memory for serial run can be set by -aw flag (MW) in pam
 
 ******************************************************************************
 *                                                                            *
 *                                O U T P U T                                 *
 *                                   from                                     *
 *                                                                            *
 *                   @@@@@    @@   @@@@@     @@@@     @@@@@                   *
 *                   @@  @@        @@  @@   @@  @@   @@                       *
 *                   @@  @@   @@   @@@@@    @@@@@@   @@                       *
 *                   @@  @@   @@   @@ @@    @@  @@   @@                       *
 *                   @@@@@    @@   @@  @@   @@  @@    @@@@@                   *
 *                                                                            *
 *                                                                            *
 %}ZS)S?$=$)]S?$%%>SS$%S$ZZ6cHHMHHHHHHHHMHHM&MHbHH6$L/:<S///</:|/:|:/::!:.::--:
 $?S$$%$$$$?%?$(SSS$SSSHMMMMMMMMMMMMMMMMMM6H&6S&SH&&k?6$r~::://///::::::.:::-::
 (%?)Z??$$$(S%$>$)S6HMMMMMMMMMMMMMMMMMMMMMMR6M]&&$6HR$&6(i::::::|i|:::::::-:-::
 $S?$$)$?$%?))?S/]#MMMMMMMMMMMMMMMMMMMMMMMMMMHM1HRH9R&$$$|):?:/://|:/::/:/.::.:
 SS$%%?$%((S)?Z[6MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM&HF$$&/)S?<~::!!:::::::/:-:|.
 SS%%%%S$%%%$$MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHHHHHHM>?/S/:/:::`:/://:/::-::
 ?$SSSS?%SS$)MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM/4?:S:/:::/:::/:/:::.::
 S$(S?S$%(?$HMMMMMMMMMMMMMMMMM#&7RH99MMMMMMMMMMMMMMMMMMHHHd$/:::::/::::::-//.:.
 (?SS(%)S&HMMMMMMMMMMMMMMMMM#S|///???$9HHMMMMMMMMMDSZ&1S/?</>?~:///::|/!:/-:-:.
 $S?%?<H(MMMMMMMMMMMMMMMMR?`. :.:`::<>:``?/*?##*)$:/>       `((%://::/:::::/::/
 S$($$)HdMMMMMMMMMMMMMMMP: . `   `  `    `      `-            `Z<:>?::/:::::|:i
 c%%%&HMMMMMMMMMMMMMMMM6:                                      `$%)>%%</>!:::::
 S?%/MMMMMMMMMMMMMMMMMMH-                                        /ZSS>?:?~:;/::
 $SZ?MMMMMMMMMMMMMMMMMH?.                                        \"&((/?//?|:::
 $%$%&MMMMMMMMMMMMMMMMM:.                                          ?%/S:</::/::
 ($?}&HMMMMMMMMMMMMMMMM>:                                          $%%<?/i:|i::
 Z$($&MMMMMMMMMMMMMMMMHk(:.  . -                                   .S/\?\?/!:/:
 (??$<HMMMMMMMMMMMMMMMFk|:   -.-.                                  :%/%/(:/:ii|
 SZ(S?]MMMMMMMMMMMMMMHS?:- -  ::.:                                  |/S:</::?||
 $%)$$(MMMMMMMMMMMMMMR):`:. :.:::`,,/bcokb/_                       :S?%?|~:/:/:
 %$$%$)[[?$?MMMMMMMMMM: :.:-.::::$7?<&7&MMMMMMM#/           _ .. ..:</?:(:/::::
 $$$?Z?HHH~|/MMMMMMMMM/`.-.:.:/:%%%%?dHMMMMMMMMMMH?,-   .,bMMMM6//./i~/~:<:::/:
 $($S$M//::S?ZHMMMMMH/:.`:::.:/%S/&MMHMMMMMMMMRM&><   ,HMMMMMMMF  :::?:///:|:::
 )[$S$S($|_i:#>::*H&?/::.::/:\"://:?>>`:&HMHSMMMM$:`-   MMHMMMMHHT .)i/?////::/
 $$[$$>$}:dHH&$$--?S::-:.:::--/-:``./::>%Zi?)&/?`:.`   `H?$T*\" `  /%?>%:)://ii|
 $&=&/ZS}$RF<:?/-.|%r/:::/:/:`.-.-..|::S//!`\"``          >??:    `SS<S:)!/////|
 Z&]>b[Z(Z?&%:::../S$$:>:::i`.`. `-.`  `                         ,>%%%:>/>/!|:/
 $$&/F&1$c$?>:>?/,>?$$ZS/::/:-: ...                              |S?S)S?<~:::::
 &$&$&$k&>>|?<:<?((/$[/?)i~/:/. - -                              S?:%%%?/:::/::
 =[/Z[[Fp[MMH$>?Z&S$$$/$S///||..-           -.-                  /((S$:%<:///:/
 $&>1MHHMMMM6M9MMMM$Z$}$S%/:::.`.            .:/,,,dcb>/:.       ((SSSS%:)!//i|
 MMMMMMMMMMMR&&RRRHR&&($(?:|i::-             .:%&S&$[&H&``     ../>%;/?>??:<::>
 MMMMMMMMMMMMS/}S$&&H&[$SS//:::.:.   . . .v</Jq1&&D]&M&<,      :/::/?%%)S>?://:
 MMMMMMMMMMMM?}$/$$kMM&&$(%/?//:..`.  .|//1d/`://?*/*/\"` `     .:/(SS$%(S%)):%
 MMMMMMMMMMMM(}$$>&&MMHR#$S%%:?::.:|-.`:;&&b/D/$p=qpv//b/~`   :/~~%%??$=$)Z$S+;
 MMMMMMMMMMMM[|S$$Z1]MMMMD[$?$:>)/::: :/?:``???bD&{b<<-`     .,:/)|SS(}Z/$$?/<S
 MMMMMMMMMMMM||$)&7k&MMMMH9]$$??Z%|!/:i::`  `` .             SS?SS?Z/]1$/&$c/$S
 MMMMMMMMMMMM| -?>[&]HMMMMMMMH1[/7SS(?:/..-` ::/Sc,/_,     _<$?SS%$S/&c&&$&>//<
 MMMMMMMMMMMMR  `$&&&HMM9MMMMMMM&&c$%%:/:/:.:.:/\?\?/\    _MMHk/7S/]dq&1S<&&></
 MMMMMMMMMMMMM?  :&96MHMMMMMMMMMMMHHk[S%(<<:// `         ,MMMMMMM&/Z6H]DkH]1$&&
 MMMMMMMMMMMMMD    99H9HMMMMMMMMMMMMMMMb&%$<:i.:....    .MMMMMMMMM6HHHRH&H&H1SF
 MMMMMMMMMMMMMM|   `?HMMMMMMMMMMMMMMMMMMMHk6k&>$&Z$/?_.bHMMMMMMMMMMM&6HRM9H6]Zk
 MMMMMMMMMMMMMMM/    `TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHMH6RH&R6&
 MMMMMMMMMMMMMMMM    -|?HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFHH6HMD&&
 MMMMMMMMMMMMMMMMk  ..:~?9MMMMMMMMMMMMM#`:MMMMMMMMMMMMMMMMMMMMMMMMMMMMM9MHkR6&F
 MMMMMMMMMMMMMMMMM/  .-!:%$ZHMMMMMMMMMR` dMMMMMMMMMMMMMMMMMMMMMMMMMMMMM9MRMHH9&
 MMMMMMMMMMMMMMMMMML,:.-|::/?&&MMMMMM` .MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHRMH&&6
 MMMMMMMMMMMMMMMMMMMc%>/:::i<:SMMMMMMHdMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHHM&969k
 MMMMMMMMMMMMMMMMMMMMSS/$$/(|HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHH&HH&
 MMMMMMMMMMMMMMMMMMMM6S/?/MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMR96H1DR1
 MMMMMMMMMMMMMMMMMMMMM&$MHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHMH691&&
 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&R&9Z
 MMMMMMMMMMMMMMMMMMMMMMMMMRHMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&96][6
 MMMMMMMMMMMMMMMMMMMMMMMMp?:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM96HH1][F
 MMMMMMMMMMMMMMMMMMMMMMMM> -HMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMH&1k&$&
 ******************************************************************************
 *                                                                            *
 *         =========================================================          *
 *                     Program for Atomic and Molecular                       *
 *          Direct Iterative Relativistic All-electron Calculations           *
 *         =========================================================          *
 *                                                                            *
 *                      VERSION 10.00  10 October 2010                        *
 *                                                                            *
 ******************************************************************************
 *                                                                            *
 *    Written by:                                                             *
 *                                                                            *
 *    Trond Saue               Université P. Sabatier, Toulouse  France       *
 *    Lucas Visscher           VU University Amsterdam           Netherlands  *
 *    Hans Jørgen Aa. Jensen   University of Southern Denmark    Denmark      *
 *                                                                            *
 *    with new contributions since the DIRAC08 release from:                  *
 *                                                                            *
 *    Radovan Bast             University of Tromsø              Norway       *
 *    Kenneth G. Dyall         Schrodinger, Inc., Portland       USA          *
 *    Ulf Ekström              VU University Amsterdam           Netherlands  *
 *    Ephraim Eliav            University of Tel Aviv            Israel       *
 *    Thomas Enevoldsen        University of Southern Denmark    Denmark      *
 *    Timo Fleig               Université P. Sabatier, Toulouse  France       *
 *    Andre S. P. Gomes        CNRS/Universite Lille 1           France       *
 *    Johan Henriksson         Linkôping University              Sweden       *
 *    Miroslav Ilias           Matej Bel University              Slovakia     *
 *    Christoph R. Jacob       Karlsruhe Institute of Technology Germany      *
 *    Stefan Knecht            CNRS/Université de Strasbourg     France       *
 *    Huliyar Nataraj          BME/Budapest Univ. Tech. & Econ.  Hungary      *
 *    Patrick Norman           Linköping University              Sweden       *
 *    Jeppe Olsen              Aarhus University                 Denmark      *
 *    Markus Pernpointner      University of Heidelberg          Germany      *
 *    Kenneth Ruud             University of Tromsø              Norway       *
 *    Bernd Schimmelpfennig    Forschungszentrum Karlsruhe       Germany      *
 *    Jetze Sikkema            VU University Amsterdam           Netherlands  *
 *    Andreas Thorvaldsen      University of Tromsø              Norway       *
 *    Jørn Thyssen             University of Southern Denmark    Denmark      *
 *    Sebastien Villaume       Linköping University              Sweden       *
 *    Shigeyoshi Yamamoto      Chukyo University                 Japan        *
 *                                                                            *
 *    For the complete list of contributors to the DIRAC code see our         *
 *    website http://dirac.chem.vu.nl                                         *
 *                                                                            *
 *    This is an experimental code. The authors accept no responsibility      *
 *    for the performance of the code or for the correctness of the results.  *
 *                                                                            *
 *    The code (in whole or part) is not to be reproduced for further         *
 *    distribution without the written permission of the authors or           *
 *    their representatives.                                                  *
 *                                                                            *
 *    If results obtained with this code are published, an                    *
 *    appropriate citation would be:                                          *
 *                                                                            *
 *    DIRAC, a relativistic ab initio electronic structure program,           *
 *    Release DIRAC10 (2010),                                                 *
 *    written by T. Saue, L. Visscher, and H. J. Aa. Jensen,                  *
 *    with new contributions from R. Bast, K. G. Dyall, U. Ekström, E. Eliav, *
 *    T. Enevoldsen, T. Fleig, A. S. P. Gomes, J. Henriksson, M. Ilias,       *
 *    Ch. R. Jacob, S. Knecht, H. S. Nataraj, P. Norman, J. Olsen,            *
 *    M. Pernpointner, K. Ruud, B. Schimmelpfennig, J. Sikkema,               *
 *    A. Thorvaldsen, J.  Thyssen, S. Villaume, and S. Yamamoto               *
 *    (see http://dirac.chem.vu.nl).                                          *
 *                                                                            *
 ******************************************************************************
 Version           : Dirac 10.0 (patchlevel 0) 
 Hostname          : larry
 Operating system  : Linux 2.6.35-25-generic
 Machine           : i686
 Run               : Sequential
 Last compilation  : 11:08:32 Feb 25 2011 (by foo@foo:foo)
 FORTRAN compiler  : foo 
 C compiler        : foo 
 External libraries: foo 
 Internal libraries: DIRAC_BLAS=foo  DIRAC_LAPACK=foo 
 ILP data model    : foo 
 SVN URL           : foo 
 SVN Revision      : foo 

 
     Date and time (Linux)  : Fri Feb 25 11:59:02 2011
     Host name              :                                         


 *******************************************************************************
 ************************** Input read from DIRAC.INP **************************
 *******************************************************************************

**DIRAC
#.WAVE FUNCTION
**HAMILTONIAN
.LEVY-LEBLOND
**WAVE FUNCTION
.DHF
**VISUAL
.NDIPZ
 1 PAMXVC 2
.NDIPZDIA
 1 DFCOEF 0
.LONDON
 Z
.SYMMETRIC
.3D_INTEGRATE
.SCALE
 -53.25135    !this is to get integrated nr in ppm
.GAUGE
 5.0 5.0 5.0
*END OF


    *************************************************************************
    ********************* DIRAC: No title specified !!! *********************
    *************************************************************************



    **************************************************************************
    ************************** General DIRAC set-up **************************
    **************************************************************************

   CODATA Recommended Values of the Fundamental Physical Constants: 1998  
                Peter J. Mohr and Barry N. Taylor                         
   Journal of Physical and Chemical Reference Data, Vol. 28, No. 6, 1999  
 * The speed of light :        137.0359998
 * Running in the four-component mode
 * Direct evaluation of the following two-electron integrals:
   - LL-integrals
   - SL-integrals
   - SS-integrals
   - GT-integrals
 * Spherical transformation embedded in MO-transformation
   for large components
 * Transformation to scalar RKB basis embedded in
   MO-transformation for small components
 * Thresholds for linear dependence:
   Large components:   1.00D-06
   Small components:   1.00D-08
 DFPCMO: IBEIG read in I2 format.
 * General print level   :   0


    *************************************************************************
    ****************** Output from HERMIT input processing ******************
    *************************************************************************



 Settings for FCK3 calculation:
 ------------------------------

Dynamical threshold is not (yet) implemented in DIRAC


    *************************************************************************
    ****************** Output from READIN input processing ******************
    *************************************************************************



  Title Cards
  -----------

  .                                                                       
  .                                                                       

  Nuclear Gaussian exponent for atom of charge   9.000 :    5.3546911034D+08

  Nuclear Gaussian exponent for atom of charge   1.000 :    2.1248239171D+09


                          SYMGRP:Point group information
                          ------------------------------

Point group: C1 

   * Character table

        |  E 
   -----+-----
    A   |   1

   * Direct product table

        | A  
   -----+-----
    A   | A  


                            **************************
                            *** Output from DBLGRP ***
                            **************************

   * One fermion irrep:   E1 
   * Quaternionic group. NZ = 4
   * Direct product decomposition:
          E1  x E1  : A   + A   + A   + A  


                                 Spinor structure
                                 ----------------


   * Fermion irrep no.: 1
      La  |  A  (1)  A  (1)  |
      Sa  |  A  (1)  A  (1)  |
      Lb  |  A  (1)  A  (1)  |
      Sb  |  A  (1)  A  (1)  |


                              Quaternion symmetries
                              ---------------------

    Rep  T(+)
    -----------------------------
    A    1  i  j  k

  QM-QM nuclear repulsion energy :    5.294117647059
  QM-pc interaction energy       :    0.000000000000
  pc-pc interaction energy       :    0.000000000000
  Total interaction energy       :    5.294117647059


  Atoms and basis sets
  --------------------

  Number of atom types:     2
  Total number of atoms:    2

  label    atoms   charge   prim    cont     basis   
  ----------------------------------------------------------------------
  F           1       9      22       9      L  - [10s4p|3s2p]                                                   
                             58      58      S  - [4s10p4d|4s10p4d]                                              
  H           1       1       4       2      L  - [4s|2s]                                                        
                             12      12      S  - [4p|4p]                                                        
  ----------------------------------------------------------------------
                             26      11      L  - large components
                             70      70      S  - small components
  ----------------------------------------------------------------------
  total:      2      10      96      81

  Cartesian basis used.
  Threshold for integrals (to be written to file):  1.00D-15

  MNF.INP input file (for the AMFI stuff) is ready.
  CAPOUT: preparing the "CAPDIR.inp" file with DIRAC unique order of atomic basis functions. 


  References for the basis sets
  -----------------------------

  Atom type   1   2
   Elements                             References                                
   --------                             ----------                                
    H - He:  W.J. Hehre, R. Ditchfield and J.A. Pople, J. Chem. Phys. 56,         
   Li - Ne:  2257 (1972). Note: Li and B come from J.D. Dill and J.A.             
             Pople, J. Chem. Phys. 62, 2921 (1975).                               
   Na - Ar:  M.M. Francl, W.J. Petro, W.J. Hehre, J.S. Binkley, M.S. Gordon,      
             D.J. DeFrees and J.A. Pople, J. Chem. Phys. 77, 3654 (1982)          
   K  - Zn:  V. Rassolov, J.A. Pople, M. Ratner and T.L. Windus, J. Chem. Phys.   
             109, 1223 (1998)                                                     
   **                                                                             


  Cartesian Coordinates
  ---------------------

  Total number of coordinates:  6


   1   F        x      0.0000000000
   2            y     -1.7000000000
   3            z      0.0000000000

   4   H        x      0.0000000000
   5            y      0.0000000000
   6            z      0.0000000000



   Interatomic separations (in Angstroms):
   ---------------------------------------

            F           H   

   F       0.000000
   H       0.899601    0.000000




  Bond distances (angstroms):
  ---------------------------

                  atom 1     atom 2                           distance
                  ------     ------                           --------
  bond distance:    H          F                              0.899601


  Nuclear repulsion energy :    5.294117647059


                                GETLAB: AO-labels
                                -----------------

   * Large components:    5
     1  L F     s        2  L F     px       3  L F     py       4  L F     pz       5  L H     s   
   * Small components:   13
     6  S F     s        7  S F     px       8  S F     py       9  S F     pz      10  S F     dxx     11  S F     dxy 
    12  S F     dxz     13  S F     dyy     14  S F     dyz     15  S F     dzz     16  S H     px      17  S H     py  
    18  S H     pz  


  Symmetry Orbitals
  -----------------

  Number of orbitals in each symmetry:           81
  Number of large orbitals in each symmetry:     11
  Number of small orbitals in each symmetry:     70

* Large component functions

  Symmetry  A  ( 1)

        3 functions:    F  s   
        2 functions:    F  px  
        2 functions:    F  py  
        2 functions:    F  pz  
        2 functions:    H  s   

* Small component functions

  Symmetry  A  ( 1)

        4 functions:    F  s   
       10 functions:    F  px  
       10 functions:    F  py  
       10 functions:    F  pz  
        4 functions:    F  dxx 
        4 functions:    F  dxy 
        4 functions:    F  dxz 
        4 functions:    F  dyy 
        4 functions:    F  dyz 
        4 functions:    F  dzz 
        4 functions:    H  px  
        4 functions:    H  py  
        4 functions:    H  pz  


   ***************************************************************************
   *************************** Hamiltonian defined ***************************
   ***************************************************************************

 * Print level:    0
 * Levy-Leblond Hamiltonian
   - Spin-orbit interactions neglected
 * Default integral flags passed to all modules
   - LL-integrals:     1
   - LS-integrals:     0
   - SS-integrals:     0
   - GT-integrals:     0
 * Basis set:
   - contracted large component basis set
   - uncontracted small component basis set


 Information about the restricted kinetic balance scheme:
 * Default RKB projection:
   1: Pre-projection in scalar basis
   2: Removal of unphysical solutions (via diagonalization of free particle Hamiltonian)


    **************************************************************************
    ************************** Wave function module **************************
    **************************************************************************

 Jobs in this run (in execution order):
 * Hartree-Fock calculation

 * Initial Automatic occupation based on:
   Total charge of atoms =  10
   Charge of molecule    =   0
   i.e. no. of electrons =  10
===========================================================================
 DHFINP: Set-up for Hartree-Fock calculation:
===========================================================================
 * Number of fermion irreps: 1
 * Closed shell SCF calculation with   10 electrons in
       5 orbitals in Fermion irrep 1
 * Bare nucleus screening correction used for start guess
 * General print level   :   0
 ***** TRIAL FUNCTION *****
 * Trial vectors read from file DFCOEF
 ***** CONVERGENCE CRITERIA *****
 * Convergence on norm of error vector (gradient).
   Desired convergence:1.000D-07
   Allowed convergence:1.000D-06

 ***** CONVERGENCE CONTROL *****
 * Fock matrix constructed using differential density matrix
    with optimal parameter.
 * DIIS (in MO basis)
 * DIIS will be activated when convergence reaches : 1.00D+20
   - Maximum size of B-matrix:   10
 * Damping of Fock matrix when DIIS is not activated. 
   Weight of old matrix    : 0.250
 * Maximum number of SCF iterations  :   50
 * No quadratic convergent Hartree-Fock
 * Contributions from 2-electron integrals to Fock matrix:
   LL-integrals.
 * NB!!! No e-p rotations in 2nd order optimization.
 ***** OUTPUT CONTROL *****
 * Only electron eigenvalues written out.


 ********************************************************************************
 *************************** Input consistency checks ***************************
 ********************************************************************************



    *************************************************************************
    ************************ End of input processing ************************
    *************************************************************************



                       Generating Lowdin canonical matrix:
                       -----------------------------------

   L   A     * Deleted:          0(Proj:          0, Lindep:          0)
   S   A     * Deleted:          4(Proj:          4, Lindep:          0)


                                Output from MODHAM
                                ------------------

* All positronic solutions deleted !


      **********************************************************************
      ************************* Orbital dimensions *************************
      **********************************************************************

No. of positive energy orbitals (NESH):    11
No. of negative energy orbitals (NPSH):     0
Total no. of orbitals           (NORB):    11

  *** Visualisation module ***
  Visualisation : DFCOEF file read
 symmetric connection is used in visual_london
 read symmetry info for connection matrices
 entering ivector, p_name, len_trim(p_name) =            1 dS/dBZ           6
 >>>> time used in plot:   0.00 seconds


                            +--------------------------+
                            ! 3D numerical integration !
                            +--------------------------+



 ********************************************************************************
 ********************** Slater-Bragg atomic size estimates **********************
 ********************************************************************************



                        Slater-Bragg relative atomic sizes
                        ----------------------------------


               Column   1     Column   2
       1       1.00000000     1.42857143
       2       0.70000000     1.00000000

DFTGRD: ATSIZE not requested or no trial vectors found. Slater-Bragg radii will be used.
 
Atom  Deg   Rmin        Rmax        Step size     #rp     #tp
=============================================================
F       1   0.739E-06   0.705E+01   0.131E+00     108   25860
H       1   0.143E-04   0.989E+01   0.142E+00      81   24126

   Number of grid points in quadrature:     49986 (100.0%)


 >>>> Time used in DFTGRD:   0.07 seconds


      scalar              x-component         y-component         z-component

    0.3869494905E+03    0.0000000000E+00    0.0000000000E+00    0.0000000000E+00

----------------------------------------------------------------------------------------------------


 >>>> time used in integration:   1.37 seconds

 
     Date and time (Linux)  : Fri Feb 25 11:59:04 2011
     Host name              :                                         
********** E N D   of   D I R A C  output  **********
*****************************************************

  
  Dynamical Memory Usage Summary
  
  Mean allocation size (Mb) :        11.82
  
  Largest          10  allocations
  
      487.60 Mb at subroutine                                            for work array at main                        
        7.63 Mb at subroutine                                            for unnamed variable                          
        7.63 Mb at subroutine                                            for unnamed variable                          
        7.63 Mb at subroutine                                            for unnamed variable                          
        7.63 Mb at subroutine                                            for unnamed variable                          
        0.20 Mb at subroutine                                            for unnamed variable                          
        0.20 Mb at subroutine                                            for unnamed variable                          
        0.20 Mb at subroutine                                            for unnamed variable                          
        0.20 Mb at subroutine                                            for unnamed variable                          
        0.18 Mb at subroutine                                            for unnamed variable                          
  
  Peak memory usage    (Mb) :       518.00
       reached at subroutine :                                           
              for variable   : unnamed variable                          
  
  Memory possibly left allocated! 
     dumping list now... 
  
  <<< Tracked variables, alloc >>>
      >>>            2  variables so far
      >>> (de)allocated data details <<<
          var. name                   : 
 unnamed variable                                                               
                                                      
               kind                   :            8
               tot.dim. (<1 if array) :        19683
               was allocated at       : 
                                                                                
                                                      
               mem.addr. (as integer) :    281477112
      >>> (de)allocated data details <<<
          var. name                   : 
 unnamed variable                                                               
                                                      
               kind                   :            8
               tot.dim. (<1 if array) :          243
               was allocated at       : 
                                                                                
                                                      
               mem.addr. (as integer) :    280932184
      >>> Done after           2  el.
  
  There were           44  allocations/            42  deallocations
      Current memory usage (in Mb) is   0.000000000000000E+000
 MEMGET high-water mark:     0.93 MB

*****************************************************
>>>> Node 0, utime: 1, stime: 0, minflt: 135310, majflt: 0, nvcsw: 1, nivcsw: 194, maxrss: 537612
>>>> Total WALL time used in DIRAC: 2s
